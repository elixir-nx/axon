# ONNX To Axon

## Converting an ONNX model into Axon

Axon is a new machine learning capability, specific to Elixir.  We would like to take
advantage of a large amount of models that have been written in other languages and 
machine learning frameworks.  Let's take a look at how we could use a model developed
in another language.

Converting models developed by data scientists into a production capable implementation is a 
challenge for all languages and frameworks.  [ONNX](https://onnx.ai/) is an interchange 
format that allows models written in one language or framework to be converted into 
another language and framework.

The source model must use constructs mapped into ONNX.  Also, the destination framework must 
support the model's ONNX constructs. From an Elixir focus, we are interested in ONNX models 
that [axon_onnx](https://github.com/elixir-nx/axon_onnx) can convert into Axon models.

<!-- livebook:{"break_markdown":true} -->

### Why is ONNX important to Axon?

<!-- livebook:{"break_markdown":true} -->

Elixir can get access to thousands of public models and your organization may have private models
written in other languages and frameworks.  Axon will be hard pressed to quickly repeat the
countless person-hours spent on developing models in other languages like Tensorflow and PyTorch.
However, if the model can be converted into ONNX and then into Axon, we can directly run the model
in Elixir.

<!-- livebook:{"break_markdown":true} -->

### ONNX Model Zoo

<!-- livebook:{"break_markdown":true} -->

The ONNX team has created a central location for well known models.  The 
[Zoo](https://github.com/onnx/models) has a wide variety of models in various
problem domains.  For this notebook, we are going to focus on image classification
trained on the ImageNet dataset.

<!-- livebook:{"break_markdown":true} -->

### Setting up our environment

<!-- livebook:{"break_markdown":true} -->

We need access to the Nx library but we can use the general Nx capability rather than EXLA or 
TorchX.  We won't be running the models just yet.  We'll convert from an ONNX Zoo
model into an Axon model using [`axon_onnx`](https://github.com/elixir-nx/axon_onnx).

We'll also need local access to ONNX files.  For this notebook, the models/onnx folder contains the ONNX model file.  This notebook assumes the output file location will be in models/axon. 
Copy your ONNX model files into the models/onnx folder.

Let's install the needed modules.

```elixir
Mix.install(
  [
    {:nx, "~> 0.2.1"},
    {:axon, "~> 0.1.0"},
    {:exla, "~> 0.2.2"},
    {:axon_onnx, "~> 0.1.0"},
    {:stb_image, "~> 0.5.2"},
    {:kino, "~> 0.6.2"}
  ],
  # Only needed when running on Nvidia GPU
  system_env: %{"XLA_TARGET" => "cuda111"}
)

EXLA.set_as_nx_default(
  [:cuda, :tpu, :rocm, :host],
  run_options: [keep_on_device: true]
)
```

<!-- livebook:{"output":true} -->

```
Resolving Hex dependencies...
Dependency resolution completed:
New:
  axon 0.1.0
  axon_onnx 0.1.0
  complex 0.4.1
  decimal 2.0.0
  elixir_make 0.6.3
  exla 0.2.3
  kino 0.6.2
  nx 0.2.1
  protox 1.6.10
  stb_image 0.5.2
  table 0.1.2
  table_rex 3.1.1
  xla 0.3.0
* Getting nx (Hex package)
* Getting axon (Hex package)
* Getting exla (Hex package)
* Getting axon_onnx (Hex package)
* Getting stb_image (Hex package)
* Getting kino (Hex package)
* Getting table (Hex package)
* Getting elixir_make (Hex package)
* Getting protox (Hex package)
* Getting decimal (Hex package)
* Getting xla (Hex package)
* Getting table_rex (Hex package)
* Getting complex (Hex package)
==> decimal
Compiling 4 files (.ex)
Generated decimal app
==> table
Compiling 5 files (.ex)
Generated table app
==> kino
Compiling 28 files (.ex)
Generated kino app
==> protox
Compiling 53 files (.ex)
Generated protox app
==> complex
Compiling 2 files (.ex)
Generated complex app
==> nx
Compiling 24 files (.ex)
Generated nx app
==> table_rex
Compiling 7 files (.ex)
Generated table_rex app
==> axon
Compiling 20 files (.ex)
Generated axon app
==> axon_onnx
Compiling 28 files (.ex)
Generated axon_onnx app
==> elixir_make
Compiling 1 file (.ex)
Generated elixir_make app
==> stb_image
cc -shared -std=c11 -O3 -Wall -Wextra -Wno-unused-parameter -Wno-missing-field-initializers -fPIC -I/home/ml3/.asdf/installs/erlang/25.0.3/erts-13.0.3/include -I/home/ml3/.cache/mix/installs/elixir-1.13.4-erts-13.0.3/55b75f361b711fed40ba4232cd09d2fa/deps/stb_image/3rd_party/stb /home/ml3/.cache/mix/installs/elixir-1.13.4-erts-13.0.3/55b75f361b711fed40ba4232cd09d2fa/deps/stb_image/c_src/stb_image_nif.c -o /home/ml3/.cache/mix/installs/elixir-1.13.4-erts-13.0.3/55b75f361b711fed40ba4232cd09d2fa/_build/dev/lib/stb_image/priv/stb_image_nif.so
Compiling 2 files (.ex)
Generated stb_image app
==> xla
Compiling 2 files (.ex)
Generated xla app
==> exla
Unpacking /home/ml3/.cache/xla/0.3.0/cache/download/xla_extension-x86_64-linux-cuda111.tar.gz into /home/ml3/.cache/mix/installs/elixir-1.13.4-erts-13.0.3/55b75f361b711fed40ba4232cd09d2fa/deps/exla/cache
g++ -fPIC -I/home/ml3/.asdf/installs/erlang/25.0.3/erts-13.0.3/include -Icache/xla_extension/include -O3 -Wall -Wno-sign-compare -Wno-unused-parameter -Wno-missing-field-initializers -Wno-comment -shared -std=c++14 c_src/exla/exla.cc c_src/exla/exla_nif_util.cc c_src/exla/exla_client.cc -o cache/libexla.so -Lcache/xla_extension/lib -lxla_extension -Wl,-rpath,'$ORIGIN/lib'
Compiling 21 files (.ex)
Generated exla app
```

<!-- livebook:{"output":true} -->

```
:cuda
```

This opinionated module presents a simple API for loading in an ONNX file and saving
the converted Axon model in the provided directory.  This API will allow us to
save multiple models pretty quickly.

```elixir
defmodule OnnxToAxon do
  @moduledoc """
  Documentation for `OnnxToAxon`.
  """

  @doc """
  Loads an ONNX model into Axon and saves the model

  ## Examples

      iex> OnnxToAxon.onnx_axon(path_to_onnx_file, path_to_axon_dir)

  """
  def onnx_axon(path_to_onnx_file, path_to_axon_dir) do
    axon_name = axon_name_from_onnx_path(path_to_onnx_file)
    path_to_axon = Path.join(path_to_axon_dir, axon_name)

    if File.exists?(path_to_axon) do
      File.rm!(path_to_axon)
    end

    {model, parameters} = load_onnx(path_to_onnx_file)
    save_axon(model, parameters, path_to_axon)

    if File.exists?(path_to_axon) do
      IO.puts("Successfully saved axon model")
    else
      IO.puts("Warning:: Could not save axon model")
    end
  end

  defp load_onnx(onnx_path) do
    AxonOnnx.Deserialize.__import__(onnx_path)
  end

  defp save_axon(model, parameters, axon_path) do
    model_bytes = Axon.serialize(model, parameters)
    File.write!(axon_path, model_bytes)
  end

  defp axon_name_from_onnx_path(onnx_path) do
    model_root =
      Path.basename(onnx_path)
      |> Path.rootname()

    "#{model_root}.axon"
  end
end
```

<!-- livebook:{"output":true} -->

```
{:module, OnnxToAxon, <<70, 79, 82, 49, 0, 0, 12, ...>>, {:axon_name_from_onnx_path, 1}}
```

Now let's convert an ONNX file into Axon

```elixir
path_to_onnx_file = "models/onnx/cats_v_dogs.onnx"
path_to_axon_dir = "models/axon"
OnnxToAxon.onnx_axon(path_to_onnx_file, path_to_axon_dir)
```

<!-- livebook:{"output":true} -->

```

12:59:53.307 [info]  successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero

12:59:53.310 [info]  successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero

12:59:53.310 [info]  XLA service 0x7fcdb401f9a0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:

12:59:53.310 [info]    StreamExecutor device (0): NVIDIA GeForce GTX 1080 Ti, Compute Capability 6.1

12:59:53.310 [info]    StreamExecutor device (1): NVIDIA GeForce GTX 1060 6GB, Compute Capability 6.1

12:59:53.310 [info]  Using BFC allocator.

12:59:53.310 [info]  XLA backend allocating 5698702540 bytes on device 0 for BFCAllocator.

12:59:53.310 [info]  XLA backend allocating 5672809267 bytes on device 1 for BFCAllocator.
Successfully saved axon model
```

<!-- livebook:{"output":true} -->

```
:ok
```

```elixir
path_to_onnx_file = "models/onnx/cat_dog_breeds.onnx"
path_to_axon_dir = "models/axon"
OnnxToAxon.onnx_axon(path_to_onnx_file, path_to_axon_dir)
```

<!-- livebook:{"output":true} -->

```
Successfully saved axon model
```

<!-- livebook:{"output":true} -->

```
:ok
```

## Inference on ONNX derived models

The above models were trained in Fast.ai (PyTorch) using the following notebooks:

* https://github.com/meanderingstream/fastai_course22/blob/main/saving-a-basic-fastai-model-in-onnx.ipynb
* https://github.com/meanderingstream/fastai_course22/blob/main/saving-cat-dog-breed-fastai-model-in-onnx.ipynb

<!-- livebook:{"break_markdown":true} -->

Let's load the Axon model.

```elixir
cats_v_dogs = File.read!("models/axon/cats_v_dogs.axon")
{cats_v_dogs_model, cats_v_dogs_params} = Axon.deserialize(cats_v_dogs)
# Axon.predict(saved_model, saved_params, Nx.tensor([[1.0, 1.0]]))
```

<!-- livebook:{"output":true} -->

```
{------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                              Model
==================================================================================================================================================================
 Layer                                                                Shape                                    Policy              Parameters   Parameters Memory
==================================================================================================================================================================
 actual_input_1 ( input )                                             {10, 3, 224, 224}                        p=f32 c=f32 o=f32   0            0 bytes
 input.4 ( conv["actual_input_1"] )                                   {10, 64, 112, 112}                       p=f32 c=f32 o=f32   9472         37888 bytes
 onnx::MaxPool_135 ( relu["input.4"] )                                {10, 64, 112, 112}                       p=f32 c=f32 o=f32   0            0 bytes
 input.8 ( max_pool["onnx::MaxPool_135"] )                            {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.16 ( conv["input.8"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 onnx::Conv_139 ( relu["input.16"] )                                  {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_223 ( conv["onnx::Conv_139"] )                             {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 container_0 ( container {"onnx::Add_223", "input.8"} )               {{10, 64, 56, 56}, {10, 64, 56, 56}}     p=f32 c=f32 o=f32   0            0 bytes
 add_0 ( add["container_0"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.24 ( relu["add_0"] )                                           {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.32 ( conv["input.24"] )                                        {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 onnx::Conv_146 ( relu["input.32"] )                                  {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_229 ( conv["onnx::Conv_146"] )                             {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 container_1 ( container {"onnx::Add_229", "input.24"} )              {{10, 64, 56, 56}, {10, 64, 56, 56}}     p=f32 c=f32 o=f32   0            0 bytes
 add_1 ( add["container_1"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.40 ( relu["add_1"] )                                           {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.48 ( conv["input.40"] )                                        {10, 128, 28, 28}                        p=f32 c=f32 o=f32   73856        295424 bytes
 onnx::Conv_153 ( relu["input.48"] )                                  {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_235 ( conv["onnx::Conv_153"] )                             {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 onnx::Add_238 ( conv["input.40"] )                                   {10, 128, 28, 28}                        p=f32 c=f32 o=f32   8320         33280 bytes
 container_2 ( container {"onnx::Add_235", "onnx::Add_238"} )         {{10, 128, 28, 28}, {10, 128, 28, 28}}   p=f32 c=f32 o=f32   0            0 bytes
 add_2 ( add["container_2"] )                                         {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.60 ( relu["add_2"] )                                           {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.68 ( conv["input.60"] )                                        {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 onnx::Conv_162 ( relu["input.68"] )                                  {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_244 ( conv["onnx::Conv_162"] )                             {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 container_3 ( container {"onnx::Add_244", "input.60"} )              {{10, 128, 28, 28}, {10, 128, 28, 28}}   p=f32 c=f32 o=f32   0            0 bytes
 add_3 ( add["container_3"] )                                         {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.76 ( relu["add_3"] )                                           {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.84 ( conv["input.76"] )                                        {10, 256, 14, 14}                        p=f32 c=f32 o=f32   295168       1180672 bytes
 onnx::Conv_169 ( relu["input.84"] )                                  {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_250 ( conv["onnx::Conv_169"] )                             {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 onnx::Add_253 ( conv["input.76"] )                                   {10, 256, 14, 14}                        p=f32 c=f32 o=f32   33024        132096 bytes
 container_4 ( container {"onnx::Add_250", "onnx::Add_253"} )         {{10, 256, 14, 14}, {10, 256, 14, 14}}   p=f32 c=f32 o=f32   0            0 bytes
 add_4 ( add["container_4"] )                                         {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.96 ( relu["add_4"] )                                           {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.104 ( conv["input.96"] )                                       {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 onnx::Conv_178 ( relu["input.104"] )                                 {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_259 ( conv["onnx::Conv_178"] )                             {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 container_5 ( container {"onnx::Add_259", "input.96"} )              {{10, 256, 14, 14}, {10, 256, 14, 14}}   p=f32 c=f32 o=f32   0            0 bytes
 add_5 ( add["container_5"] )                                         {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.112 ( relu["add_5"] )                                          {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.120 ( conv["input.112"] )                                      {10, 512, 7, 7}                          p=f32 c=f32 o=f32   1180160      4720640 bytes
 onnx::Conv_185 ( relu["input.120"] )                                 {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_265 ( conv["onnx::Conv_185"] )                             {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 onnx::Add_268 ( conv["input.112"] )                                  {10, 512, 7, 7}                          p=f32 c=f32 o=f32   131584       526336 bytes
 container_6 ( container {"onnx::Add_265", "onnx::Add_268"} )         {{10, 512, 7, 7}, {10, 512, 7, 7}}       p=f32 c=f32 o=f32   0            0 bytes
 add_6 ( add["container_6"] )                                         {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.132 ( relu["add_6"] )                                          {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.140 ( conv["input.132"] )                                      {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 onnx::Conv_194 ( relu["input.140"] )                                 {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_274 ( conv["onnx::Conv_194"] )                             {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 container_7 ( container {"onnx::Add_274", "input.132"} )             {{10, 512, 7, 7}, {10, 512, 7, 7}}       p=f32 c=f32 o=f32   0            0 bytes
 add_7 ( add["container_7"] )                                         {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.148 ( relu["add_7"] )                                          {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Concat_199 ( max_pool["input.148"] )                           {10, 512, 1, 1}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Concat_200 ( global_avg_pool["input.148"] )                    {10, 512, 1, 1}                          p=f32 c=f32 o=f32   0            0 bytes
 container_8 ( container {"onnx::Concat_199", "onnx::Concat_200"} )   {{10, 512, 1, 1}, {10, 512, 1, 1}}       p=f32 c=f32 o=f32   0            0 bytes
 onnx::Reshape_201 ( concatenate["container_8"] )                     {10, 1024, 1, 1}                         p=f32 c=f32 o=f32   0            0 bytes
 x ( reshape["onnx::Reshape_201"] )                                   {10, 1024}                               p=f32 c=f32 o=f32   0            0 bytes
 ret ( batch_norm["x"] )                                              {10, 1024}                               p=f32 c=f32 o=f32   4096         16384 bytes
 ret.3 ( dense["ret"] )                                               {10, 512}                                p=f32 c=f32 o=f32   524288       2097152 bytes
 onnx::BatchNormalization_213 ( relu["ret.3"] )                       {10, 512}                                p=f32 c=f32 o=f32   0            0 bytes
 ret.7 ( batch_norm["onnx::BatchNormalization_213"] )                 {10, 512}                                p=f32 c=f32 o=f32   2048         8192 bytes
 output1 ( dense["ret.7"] )                                           {10, 2}                                  p=f32 c=f32 o=f32   1024         4096 bytes
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total Parameters: 11703168
Total Parameters Memory: 46812672 bytes
Inputs: %{"actual_input_1" => {10, 3, 224, 224}}
,
 %{
   "input.104" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23061>
       [-0.07698848098516464, 0.01005774736404419, -0.29242366552352905, 0.0019955039024353027, 0.3025658130645752, 0.2056763768196106, -0.04200617969036102, 0.5553656816482544, 0.1181923896074295, 0.20941713452339172, -0.09031594544649124, 0.0772099643945694, 0.08073383569717407, 0.21969042718410492, 0.19975337386131287, -0.0763862282037735, 0.2088490128517151, 0.07211913168430328, 0.05396266281604767, 0.26068153977394104, 0.11317706108093262, 0.2509128451347351, 0.08953508734703064, 0.029617294669151306, 0.10492880642414093, -0.09331247210502625, -0.007692441344261169, -0.02981698513031006, 0.30428361892700195, 0.4858894348144531, 0.02639921009540558, 0.07519197463989258, 0.32269251346588135, -0.1477847844362259, 0.07227930426597595, 0.30919963121414185, 0.17370373010635376, 0.23546509444713593, -0.19405265152454376, 0.2505050301551819, 0.64827960729599, 0.133283793926239, -0.05243930220603943, 0.07765178382396698, -0.6925174593925476, 0.3704501986503601, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23063>
       [
         [
           [
             [0.02614687755703926, 0.025767508894205093, 0.020337287336587906],
             [0.026719585061073303, 0.030007194727659225, 0.03057476133108139],
             [0.012417474761605263, 0.007371111772954464, 0.01369593758136034]
           ],
           [
             [-0.0022997132036834955, -0.00229219370521605, 0.0018838263349607587],
             [-7.486026152037084e-4, 0.0014842364471405745, 0.010626564733684063],
             [-0.011924941092729568, -0.011940940283238888, -0.0015262285014614463]
           ],
           [
             [-0.006402440369129181, -0.010851002298295498, -0.012681915424764156],
             [-0.007186469156295061, -0.012615576386451721, -0.013335059396922588],
             [0.005031156819313765, 0.00330534134991467, -0.0034578582271933556]
           ],
           [
             [-0.008914215490221977, -0.009714227169752121, -0.014913606457412243],
             [-0.0014316821470856667, -0.001900480012409389, -0.008630848489701748],
             [-0.0019450135296210647, -6.528167286887765e-4, 8.65212525241077e-4]
           ],
           [
             [-0.0068631949834525585, 4.335563280619681e-4, 0.0039869677275419235],
             [-7.43162352591753e-4, -7.528341029683361e-6, 0.0010943238157778978],
             [0.0019862581975758076, 0.004924888722598553, -0.0021786559373140335]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.120" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23064>
       [-0.10572459548711777, -0.11846917867660522, -0.09777916967868805, 0.16959567368030548, 0.09687180817127228, 0.010192334651947021, 0.13911810517311096, -0.1521855890750885, 0.2417343556880951, 0.38908272981643677, -0.09842227399349213, 0.09030516445636749, 0.13568522036075592, -0.03406284749507904, 0.08684715628623962, 0.19467531144618988, 0.04526251554489136, 0.04953789710998535, -0.09251882880926132, -0.031383588910102844, 0.058825984597206116, 0.1154089868068695, 0.41848257184028625, 0.04909983277320862, 0.035811811685562134, 0.1009032130241394, -0.23584529757499695, 0.0834747850894928, 0.09255170822143555, 0.11874884366989136, 0.1140483170747757, 0.18378567695617676, 0.07199613749980927, -2.91973352432251e-4, -0.15247739851474762, 0.11946265399456024, 0.4576561450958252, -0.20915348827838898, 0.21811756491661072, -0.010606884956359863, 0.2302621304988861, 0.4834349453449249, 0.15125837922096252, 0.240052729845047, 0.03063642978668213, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23066>
       [
         [
           [
             [-0.0069506517611444, -0.011913730762898922, -0.016244102269411087],
             [0.01624591462314129, 0.018739555031061172, 0.021362917497754097],
             [0.03264600411057472, 0.025104619562625885, 0.0362275093793869]
           ],
           [
             [-0.004737531766295433, 0.0025043662171810865, -0.0024350315798074007],
             [0.005271486472338438, 0.011218161322176456, -0.0016436020378023386],
             [-0.002389603527262807, 0.009678907692432404, 0.0014877598732709885]
           ],
           [
             [0.01452074758708477, -0.0071432082913815975, -0.010270277969539165],
             [0.006890798918902874, -0.001873424625955522, -0.009114592336118221],
             [-0.002817087573930621, -0.02050982229411602, -0.006559439469128847]
           ],
           [
             [-0.009256582707166672, -0.00805663876235485, -0.012237964197993279],
             [0.013546795584261417, 0.014232580550014973, -0.00168566033244133],
             [0.02288999781012535, 0.03836241737008095, 0.020205270498991013]
           ],
           [
             [0.010642869397997856, 0.009636709466576576, 0.00732016796246171],
             [0.007248078938573599, 0.003323798766359687, -0.0071490975096821785],
             [0.015255681239068508, 0.002258871216326952, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.140" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23067>
       [0.22365501523017883, 0.3255944848060608, 0.03632834553718567, 0.17389914393424988, 0.33867383003234863, 0.17097343504428864, 0.18277433514595032, 0.17873787879943848, 0.04931984841823578, 0.21356964111328125, 0.1668655425310135, 0.1472989320755005, 0.19135740399360657, 0.20891305804252625, 0.10042661428451538, 0.1630324423313141, 0.19358083605766296, 0.15929311513900757, 0.23840822279453278, 0.11815902590751648, 0.1560843586921692, 0.03658680617809296, 0.21033358573913574, 0.13193467259407043, 0.4298895597457886, 0.23043963313102722, 0.0953405499458313, 0.15789783000946045, 0.11923062801361084, 0.17728441953659058, 0.17035016417503357, 0.2683279812335968, 0.28951412439346313, 0.28024017810821533, 0.16175705194473267, 0.28272444009780884, 0.21870452165603638, 0.2182374894618988, 0.2055005133152008, 0.12207069993019104, 0.13021895289421082, 0.20153307914733887, 0.19799542427062988, 0.17905594408512115, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23069>
       [
         [
           [
             [-0.006087283603847027, -0.0037324121221899986, 0.004210663493722677],
             [0.003997993655502796, -0.002420815173536539, 0.009816263802349567],
             [0.009532870724797249, 0.011420544236898422, 0.018372278660535812]
           ],
           [
             [-8.217027061618865e-4, 0.009027659893035889, 0.008258873596787453],
             [-0.013711262494325638, -0.01039784774184227, -0.006547174416482449],
             [-0.008709448389708996, -0.0030824800487607718, -0.0015141486655920744]
           ],
           [
             [-0.008220995776355267, -0.010078279301524162, 5.357113550417125e-4],
             [-0.012808258645236492, -0.02033696137368679, -0.009229273535311222],
             [-0.009781880304217339, -0.019086506217718124, -0.016526414081454277]
           ],
           [
             [0.006127198692411184, -0.004017672035843134, 0.0034708643797785044],
             [-0.007504190318286419, -0.030697310343384743, -0.0037877385038882494],
             [0.003571337554603815, -0.013728288002312183, -3.821973514277488e-4]
           ],
           [
             [-7.734804239589721e-5, 0.006738365162163973, 0.006456592585891485],
             [-0.002163062570616603, -0.006593876052647829, 0.006232370622456074],
             [-0.01601400598883629, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.16" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23070>
       [0.37990933656692505, 0.3218666613101959, 0.16831915080547333, 0.3931892514228821, 0.763494610786438, 0.4857133626937866, 0.3515614867210388, 0.13787633180618286, 0.5774635076522827, 0.3130865693092346, 0.10011313855648041, 0.936164379119873, 0.17819204926490784, 0.3233267068862915, 0.36298659443855286, 0.36155372858047485, 0.7021536827087402, 0.034171462059020996, 0.8515594005584717, 0.3245978355407715, 0.46091997623443604, 0.8094245195388794, 0.8812625408172607, 0.3713739514350891, 0.08468124270439148, 0.11187172681093216, -0.08830428123474121, 0.8135523796081543, 0.012593522667884827, -0.23173870146274567, -0.10953062772750854, 0.973979651927948, 0.5326406955718994, 1.2345328330993652, 0.9136295318603516, 0.6518380641937256, 0.48924002051353455, 0.10945136845111847, 1.2650940418243408, 0.9265995025634766, 0.19324131309986115, 0.6232962608337402, -0.19004525244235992, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23072>
       [
         [
           [
             [0.02852058783173561, -0.04688582941889763, -0.009870285168290138],
             [-0.036682091653347015, -0.3944665193557739, -0.10496123880147934],
             [0.03248235210776329, -0.04754950478672981, -0.005890701897442341]
           ],
           [
             [-0.0034482628107070923, 0.0070760129019618034, 2.871125179808587e-4],
             [0.020397663116455078, -0.07957383990287781, -0.011445245705544949],
             [0.0016259819967672229, 0.003555369097739458, 0.03541930764913559]
           ],
           [
             [-1.1664949006728875e-9, -1.9387723426689263e-8, -1.6278033143635184e-8],
             [1.0731672439590056e-8, 4.1125329808267e-9, 6.192348855904584e-9],
             [5.619081200336495e-9, 4.3493377788195176e-9, 7.655228451142193e-9]
           ],
           [
             [7.0921890437603e-4, -0.0024188237730413675, 0.003535578027367592],
             [-0.01041549164801836, -0.03359304368495941, -0.0076818340457975864],
             [0.01284951064735651, -0.007094447035342455, -0.002549633849412203]
           ],
           [
             [-2.436618240508892e-9, -2.631166395872242e-9, 1.4241985368812493e-9],
             [-1.4863420494393154e-9, -7.318725070426524e-10, -2.45500197948445e-9],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.32" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23073>
       [0.20127102732658386, -0.9952641725540161, 0.5847458839416504, 0.12825369834899902, 0.2959117889404297, 0.8470251560211182, 0.1946808248758316, 0.021027319133281708, 0.2482551485300064, 0.3393520414829254, 0.39857667684555054, 0.2259189784526825, 0.8574326038360596, 0.32842570543289185, -0.12372028827667236, -0.10815206170082092, 0.23135128617286682, 0.0881309062242508, 0.7154066562652588, 0.21226254105567932, -0.240741565823555, 0.803473174571991, 0.7410016059875488, -0.04813205823302269, -0.18600982427597046, 0.7162063121795654, 0.817489504814148, 0.4731639623641968, -0.44671452045440674, 0.048422157764434814, -0.4452275037765503, 1.195218801498413, 0.45905426144599915, -0.0024999380111694336, 0.8698665499687195, 1.2176921367645264, -0.01756465435028076, -0.08467242121696472, 0.3391311764717102, 0.6675218939781189, -0.8215893507003784, 0.11658388376235962, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23075>
       [
         [
           [
             [0.009119702503085136, -0.0023851688019931316, -0.0017161598661914468],
             [-0.009053944610059261, -0.005614599213004112, -0.016194459050893784],
             [0.023485438898205757, 0.03502606600522995, 0.020054049789905548]
           ],
           [
             [0.00651545450091362, -0.004008195362985134, -0.004853824153542519],
             [-0.01962578110396862, -0.010938171297311783, -0.025147773325443268],
             [-6.474195397458971e-4, 0.0216281246393919, 0.02357546053826809]
           ],
           [
             [0.009918298572301865, 0.001854213885962963, -0.0045756995677948],
             [-0.004393100272864103, -0.011832645162940025, -0.013118984177708626],
             [-0.01397789642214775, -0.022315314039587975, -0.012034923769533634]
           ],
           [
             [-0.002816649153828621, -0.021313456818461418, 0.031934041529893875],
             [0.015256606042385101, -0.006883732974529266, 0.02629493921995163],
             [0.014792095869779587, 0.015564211644232273, -0.027571242302656174]
           ],
           [
             [0.029471054673194885, 0.03621990233659744, 0.0314432755112648],
             [0.004341225139796734, 0.007149304263293743, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.4" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23076>
       [0.2312699556350708, 0.2539170980453491, -1.0542993322815164e-6, -0.663280189037323, -1.65705582588771e-8, 0.16148895025253296, 0.45808371901512146, -4.301947740259493e-7, 0.2990066707134247, -8.004711162357125e-6, 0.34993553161621094, 0.3099365234375, -0.25507789850234985, -3.476783967926167e-5, 0.10849656909704208, 0.2181277573108673, 0.3782581686973572, -0.5334565043449402, -0.6226300001144409, 0.5702671408653259, 0.2990571856498718, 0.5842980146408081, 0.48089054226875305, 0.3259250819683075, 0.196046382188797, 0.19689570367336273, 0.15151402354240417, 0.10306964814662933, 0.49246418476104736, 0.01435165200382471, 0.16649474203586578, 0.33064156770706177, 0.26252901554107666, 0.4510307312011719, -0.287678599357605, -0.03152579069137573, -2.450685485655413e-7, 0.32332688570022583, -4.91517653244955e-8, 0.23630012571811676, 0.23290564119815826, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][3][7][7]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23078>
       [
         [
           [
             [-0.0027864845469594, -0.0016342118615284562, -4.7409505350515246e-4, 0.019910670816898346, 0.015070035122334957, 0.0045613618567585945, -0.00335705722682178],
             [0.002938301768153906, 0.0025417066644877195, -0.029225626960396767, -0.07458438724279404, -0.07211697101593018, -0.034295082092285156, 0.0010245585581287742],
             [-0.0018477316480129957, 0.015730462968349457, 0.07859671115875244, 0.1561736762523651, 0.1382288932800293, 0.0682004913687706, 0.01694023236632347],
             [0.00811030250042677, -0.01780691370368004, -0.07933825254440308, -0.11663831025362015, -0.07200582325458527, -1.3758291606791317e-4, 0.01534556970000267],
             [-0.007329944521188736, 0.00427159434184432, 0.019315151497721672, -0.014370156452059746, -0.08849774301052094, -0.11182154715061188, -0.06854436546564102],
             [0.008127950131893158, 0.01088708732277155, 0.016713643446564674, 0.06356146931648254, 0.11006572842597961, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.48" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23079>
       [-0.11886826902627945, -0.33443886041641235, 0.013828959316015244, 0.02174646407365799, 0.12128620594739914, 0.23426568508148193, 0.03272096440196037, -0.042807865887880325, 0.0404532253742218, -0.15522322058677673, -0.18877919018268585, 0.20862093567848206, 0.0039043352007865906, 0.2622738778591156, 0.09400896728038788, -0.049010708928108215, -0.14131289720535278, 0.7244950532913208, -0.19315311312675476, 0.2086881697177887, 0.11119037121534348, 0.052645519375801086, -0.29006198048591614, 0.18765467405319214, -0.09289209544658661, 0.15299533307552338, -0.0058333054184913635, -0.021728873252868652, 0.031724005937576294, -0.1342010647058487, -0.1068495586514473, -0.16024520993232727, 0.5561146140098572, -0.13258299231529236, -0.16088783740997314, 0.12437494844198227, -0.3662029504776001, -0.05061504244804382, 0.1591712236404419, 0.16675984859466553, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23081>
       [
         [
           [
             [-0.02847444638609886, -0.043880779296159744, -0.054519496858119965],
             [0.028072888031601906, -0.005857127718627453, -0.040011584758758545],
             [0.047497451305389404, 0.03479298576712608, -0.0032480184454470873]
           ],
           [
             [-0.009492040611803532, -0.002502299379557371, 9.598138276487589e-4],
             [0.002479083137586713, 0.007492908742278814, 0.010058281011879444],
             [0.00100368179846555, -0.0015665485989302397, -0.004772923421114683]
           ],
           [
             [0.0024738856591284275, 0.0025977990590035915, -0.004827423952519894],
             [0.0031707603484392166, -0.005340449046343565, -0.016957173123955727],
             [0.006952904164791107, -0.005504492204636335, -0.018733441829681396]
           ],
           [
             [-0.015083929523825645, -0.014652482233941555, 0.004228046163916588],
             [-0.006702282931655645, -0.01937788724899292, -0.0037429723888635635],
             [0.01229893323034048, 0.002893339842557907, 2.8878511511720717e-4]
           ],
           [
             [0.021189836785197258, 0.021581247448921204, 0.011273727752268314],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.68" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23082>
       [0.06363719701766968, 0.12454283237457275, -0.4868748188018799, 0.28491437435150146, 0.3300909399986267, 0.23228782415390015, 0.1323007196187973, 0.29937049746513367, -0.03598432242870331, 0.029789581894874573, 0.08868679404258728, -0.028874754905700684, -0.029456742107868195, 0.10879096388816833, 0.04539971053600311, 0.2838408946990967, -0.060889214277267456, 0.05392155051231384, -0.2974337339401245, -0.026325494050979614, -0.06989763677120209, 0.24272799491882324, 0.03482946753501892, -0.07824806869029999, 0.3955499529838562, -0.12267129123210907, 0.13590383529663086, -0.18189255893230438, 0.12301412224769592, 0.01869902014732361, 0.16308103501796722, 0.3462766408920288, -0.33969688415527344, -0.12147597968578339, -0.1312331110239029, 0.1521211862564087, 0.2904030382633209, -0.026235759258270264, 0.010526105761528015, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23084>
       [
         [
           [
             [-7.224438595585525e-4, -0.005018723197281361, -0.0050988029688596725],
             [0.016236836090683937, 0.0012635329039767385, 0.0038442485965788364],
             [0.006330016069114208, -0.010664219036698341, 0.0025894201826304197]
           ],
           [
             [-0.014006665907800198, -9.813163196668029e-4, -0.009485390968620777],
             [-0.01112962793558836, 0.006102378945797682, 0.004431290086358786],
             [0.007095294073224068, -0.004739671479910612, -0.007499272469431162]
           ],
           [
             [-7.777361897751689e-4, 0.019805217161774635, 0.014628829434514046],
             [-0.03968043252825737, -0.015386313199996948, 0.0015584371285513043],
             [0.02642739564180374, -0.06728470325469971, -0.038984689861536026]
           ],
           [
             [0.003051272127777338, 0.006281201262027025, 0.008080103434622288],
             [0.006040406413376331, 0.006510076113045216, 0.012488026171922684],
             [-0.0025514266453683376, -0.0017358652548864484, 0.0068726614117622375]
           ],
           [
             [-0.0032081487588584423, -0.02310694195330143, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.84" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23085>
       [0.005413368344306946, 0.1103406697511673, 0.1598835289478302, 0.020523834973573685, 0.2535810172557831, -0.16290055215358734, -0.13576750457286835, -0.1152309998869896, -0.13189774751663208, 0.04200683534145355, 0.2517155110836029, 0.22553695738315582, 0.5855043530464172, 0.1902714967727661, 0.6141594648361206, 0.1833437830209732, -0.2960292100906372, 0.38074350357055664, -0.3015894293785095, 0.09196387976408005, 0.1026059091091156, 0.3396714925765991, -0.14018535614013672, -0.06948274374008179, 0.2615770101547241, 0.41740286350250244, 0.19529937207698822, -0.4550052583217621, 0.07394587248563766, -0.1513572633266449, 0.37607264518737793, 0.19779148697853088, -0.3972437381744385, 0.050135936588048935, -0.033174872398376465, 0.2875499427318573, 0.16250431537628174, -0.0421157032251358, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23087>
       [
         [
           [
             [-0.009579897858202457, -0.009876052848994732, -0.008709308691322803],
             [-0.00370199978351593, 0.008352544158697128, 0.005612488370388746],
             [-0.009238784201443195, -5.180324660614133e-4, -0.006406772416085005]
           ],
           [
             [-0.005047425627708435, -0.009619542397558689, -0.003416219260543585],
             [0.006272618658840656, -0.005559222772717476, -0.0021619610488414764],
             [0.003726070746779442, -0.008987289853394032, -0.004497491288930178]
           ],
           [
             [-0.013821644708514214, -0.02213606983423233, -0.019220760092139244],
             [-0.01852959580719471, -0.033153437077999115, -0.02219797670841217],
             [-0.02064291387796402, -0.02146298438310623, -0.009335938841104507]
           ],
           [
             [-0.011065968312323093, -0.002006825525313616, -0.004430562723428011],
             [-0.01689849980175495, -0.007824653759598732, -0.011673172935843468],
             [-0.00804092362523079, -0.013531683012843132, -0.008033565245568752]
           ],
           [
             [-0.01130233146250248, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_223" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23088>
       [0.11738873273134232, 0.002275177277624607, -1.2436293363571167, -0.3202255964279175, 0.07866537570953369, -0.1324450820684433, 0.032061927020549774, 0.019379908218979836, 0.9463146924972534, -0.06115877255797386, 0.06843052804470062, 0.4923355281352997, 0.09422362595796585, -0.16739559173583984, -0.0034545958042144775, 0.14894017577171326, -0.04379335790872574, -0.1594427078962326, -0.2681275010108948, -0.4007140100002289, -0.5406696200370789, 0.10114079713821411, -0.3312358558177948, 0.12824741005897522, -0.038442373275756836, 0.603265643119812, -0.02956610545516014, -0.112773597240448, 0.2821160554885864, 0.22220416367053986, 0.4814437925815582, 0.25899413228034973, -0.014120295643806458, 0.330983430147171, 0.11866866797208786, -0.045325182378292084, -0.813015341758728, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23090>
       [
         [
           [
             [0.018133966252207756, -0.07350335270166397, -0.003444388508796692],
             [-0.06043853983283043, -0.2316831350326538, -0.07205003499984741],
             [-0.040203072130680084, -0.13375863432884216, -0.038213953375816345]
           ],
           [
             [-0.011818412691354752, 0.01510243397206068, -0.001443885383196175],
             [-0.0021789066959172487, 0.03169040009379387, -0.008054575882852077],
             [-0.04167785122990608, 0.004662999417632818, 0.0020967042073607445]
           ],
           [
             [-0.003089394886046648, 0.013769790530204773, 0.00926822330802679],
             [0.009218527004122734, -0.005440209060907364, 0.008369400165975094],
             [0.009553254581987858, 0.007800538558512926, 0.003869730979204178]
           ],
           [
             [0.0227288156747818, -0.047413211315870285, -0.03594115376472473],
             [0.009794779121875763, -0.11392148584127426, -0.05300484225153923],
             [-0.0028923514764755964, -0.07149320095777512, -0.03502916172146797]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_229" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23091>
       [-0.10564234107732773, 0.22684748470783234, -1.1940861940383911, -8.275359869003296e-4, -0.10051688551902771, -0.05861908197402954, -0.31364816427230835, -0.2426064908504486, 0.6775805354118347, 0.38282155990600586, -0.23793041706085205, 0.003867773339152336, -0.1456672102212906, 1.1029140949249268, -0.23198552429676056, 0.07336623966693878, 0.10838691890239716, 0.24838952720165253, -0.23260188102722168, -0.00942269153892994, -0.0333763062953949, -0.1488093137741089, -0.0467180572450161, -0.0579131580889225, -0.23883765935897827, 0.10511204600334167, 0.08279439806938171, 0.19392478466033936, 1.03546142578125, 0.045763105154037476, 0.09651890397071838, 0.19545690715312958, 0.7567149996757507, -0.051735103130340576, 0.6997815370559692, -0.15522512793540955, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23093>
       [
         [
           [
             [-0.024717725813388824, -0.005044959485530853, 0.005508888512849808],
             [-0.00955896731466055, 0.04813782870769501, 0.026578214019536972],
             [-0.010058640502393246, 0.06632795929908752, 0.03455005958676338]
           ],
           [
             [0.06761740148067474, 0.049311649054288864, 0.05179329589009285],
             [0.02540585584938526, -0.01520809531211853, 0.008607038296759129],
             [0.052115943282842636, 0.03529774770140648, 0.04334855079650879]
           ],
           [
             [-0.017714329063892365, -0.044733449816703796, -0.05340082198381424],
             [-0.026576975360512733, 0.032436810433864594, 0.005192308686673641],
             [-0.023413367569446564, 0.015750419348478317, 0.029674092307686806]
           ],
           [
             [0.0017097287345677614, -0.09582443535327911, -0.0530233234167099],
             [-0.05461081862449646, -0.17358173429965973, -0.1223134696483612],
             [9.687748970463872e-4, -0.08574309200048447, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_235" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23094>
       [0.31823113560676575, 0.27634894847869873, 0.6035528182983398, 0.0038163885474205017, 0.3435554802417755, 0.11432260274887085, 0.9732435941696167, 0.23062577843666077, 0.4295177459716797, 0.11998551338911057, 0.03498217463493347, 0.16066303849220276, -0.07308954745531082, 0.184554785490036, 0.15759962797164917, 0.4694630205631256, 0.5526073575019836, 0.11554225534200668, -0.5529605746269226, -0.042418889701366425, 0.3564732074737549, 0.126267671585083, 0.3164384365081787, 0.04377152770757675, 0.04436700418591499, 0.3092052638530731, 0.21258044242858887, -0.04136769101023674, -0.06746447831392288, 0.43941694498062134, 0.33683180809020996, 0.21441985666751862, 0.37753456830978394, 0.13141807913780212, 0.46424949169158936, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23096>
       [
         [
           [
             [-0.00489493552595377, -0.006373214535415173, 0.0018912849482148886],
             [-0.007016011513769627, 0.01715235412120819, 0.030049731954932213],
             [-0.017946597188711166, 0.003600974567234516, 0.008844220079481602]
           ],
           [
             [0.023280298337340355, 0.016402358189225197, 0.005073747131973505],
             [0.002666505752131343, 0.013104724697768688, 0.017990248277783394],
             [0.02321128360927105, 0.02328471653163433, 0.008787683211266994]
           ],
           [
             [0.012596244923770428, -0.014059853740036488, -0.02379346266388893],
             [-0.01286849845200777, -0.01242225244641304, -0.03909900784492493],
             [-0.014290709979832172, -0.004985240288078785, 0.002621615771204233]
           ],
           [
             [0.005017432849854231, 0.002749720588326454, 0.008904374204576015],
             [-0.011784300208091736, 0.0053575169295072556, 0.0038920030929148197],
             [-0.0060623143799602985, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_238" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23097>
       [0.18034924566745758, -5.658864974975586e-4, 0.13368843495845795, -0.22161537408828735, -0.012721884995698929, 0.06799370050430298, -0.2859732508659363, 0.1918514519929886, -0.08921639621257782, 0.16485852003097534, 0.24261310696601868, 0.2795547842979431, 0.3359287679195404, 0.12746943533420563, -0.00460449606180191, 0.19999265670776367, 0.0939091295003891, -0.19205480813980103, -0.07891038060188293, 0.00814848579466343, 0.1274186074733734, -0.020703747868537903, 0.6807518601417542, 0.021746642887592316, 0.039910562336444855, -0.04043282940983772, 0.2373475730419159, 0.18585500121116638, -0.1520090103149414, 0.8075443506240845, 0.07605855911970139, 0.08742907643318176, 0.9486801028251648, 0.2279818058013916, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][64][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23099>
       [
         [
           [
             [0.011903597041964531]
           ],
           [
             [-0.2328016757965088]
           ],
           [
             [0.009285029023885727]
           ],
           [
             [0.006301018409430981]
           ],
           [
             [-0.02098291739821434]
           ],
           [
             [0.025160327553749084]
           ],
           [
             [0.1117885634303093]
           ],
           [
             [0.001049119746312499]
           ],
           [
             [-0.011655530892312527]
           ],
           [
             [0.08893624693155289]
           ],
           [
             [-0.0038891658186912537]
           ],
           [
             [0.008940387517213821]
           ],
           [
             [0.014550555497407913]
           ],
           [
             [0.02698996290564537]
           ],
           [
             [0.04130556061863899]
           ],
           [
             [0.0066432771272957325]
           ],
           [
             [0.09948353469371796]
           ],
           [
             [0.01490853913128376]
           ],
           [
             [-0.11249639838933945]
           ],
           [
             [-0.03714507445693016]
           ],
           [
             [0.005279819946736097]
           ],
           [
             [0.05435054004192352]
           ],
           [
             [0.00281948852352798]
           ],
           [
             [0.12041610479354858]
           ],
           [
             [-0.0034949604887515306]
           ],
           [
             [0.012083775363862514]
           ],
           [
             [0.011243147775530815]
           ],
           [
             [-0.22759008407592773]
           ],
           [
             [0.05258777737617493]
           ],
           [
             [0.021451210603117943]
           ],
           [
             [0.014719353057444096]
           ],
           [
             [0.19309008121490479]
           ],
           [
             [-0.07803221046924591]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_244" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23100>
       [-0.11303133517503738, -0.13007967174053192, -0.456851601600647, -0.07296979427337646, 0.2020764946937561, -0.1676354855298996, 0.03666427731513977, 0.009515352547168732, 0.14876756072044373, -0.06595861911773682, -0.16446980834007263, -0.13889487087726593, -0.0649423897266388, 0.24434730410575867, -0.2025597095489502, -0.2160053551197052, -0.13634899258613586, -0.07036051154136658, -0.1296505331993103, 0.10101187974214554, -0.08120255917310715, -0.10090147703886032, -0.45667383074760437, 0.04249081015586853, -0.4574871361255646, 0.0921243205666542, -0.14230965077877045, 0.045015331357717514, -0.1850130558013916, -0.24664470553398132, 0.0790361613035202, 0.0013913437724113464, -0.15088945627212524, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23102>
       [
         [
           [
             [-0.01389470137655735, 0.004385662265121937, -7.126881391741335e-4],
             [-0.007508276030421257, -0.016735397279262543, -0.02078241854906082],
             [0.005529328249394894, 0.008890612982213497, -0.011846892535686493]
           ],
           [
             [-0.009422501549124718, 0.0022987204138189554, 0.020401649177074432],
             [-0.015276459977030754, 0.01702958345413208, 0.055193860083818436],
             [0.005202550906687975, 0.06590732932090759, 0.0880756825208664]
           ],
           [
             [-0.006906938273459673, 0.005970306228846312, 0.021869512274861336],
             [-0.0069338479079306126, 0.007981129921972752, 0.007040303200483322],
             [0.006754262372851372, 0.010506873950362206, 0.006138052325695753]
           ],
           [
             [0.0023676124401390553, -0.00876015517860651, 0.009962521493434906],
             [0.014848126098513603, -0.003579366486519575, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_250" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23103>
       [0.16263636946678162, 0.41146695613861084, -0.013036046177148819, -0.10138790309429169, 0.2746133804321289, 0.10814163088798523, 0.20043745636940002, 0.23761720955371857, 0.11372671276330948, 0.26353368163108826, 0.048142123967409134, 0.1806715428829193, 0.06960341334342957, 0.29504284262657166, 0.11809640377759933, -0.030906060710549355, 0.2591952085494995, -0.19352127611637115, 0.1862228661775589, 0.1580950915813446, 0.19684778153896332, 0.18259769678115845, 0.1923982948064804, 0.014151453971862793, 0.21093973517417908, 0.03613940626382828, 0.015449412167072296, 0.3896031379699707, 0.48932451009750366, 0.03844817727804184, 0.23387807607650757, 0.19900664687156677, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23105>
       [
         [
           [
             [-0.010632842779159546, -0.0363139808177948, -0.014838095754384995],
             [-0.025737212970852852, -0.07849010825157166, -0.049487024545669556],
             [-0.04408334568142891, -0.07922776788473129, -0.06541725248098373]
           ],
           [
             [-0.027350209653377533, 0.002428631531074643, -0.028036201372742653],
             [0.010128768160939217, 0.011018392629921436, -0.017037294805049896],
             [-0.010784917511045933, 0.0022780944127589464, -0.011838394217193127]
           ],
           [
             [-0.014257246628403664, 0.02145973965525627, 0.004521982744336128],
             [0.015923021361231804, 0.01161304209381342, -0.003662914503365755],
             [-0.019860608503222466, -0.016252940520644188, -0.013839399442076683]
           ],
           [
             [0.04166470095515251, 0.020069291815161705, 0.0012995925499126315],
             [0.0388624481856823, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_253" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23106>
       [0.028903957456350327, 0.14923398196697235, 0.025715893134474754, 0.1262708306312561, 0.03711000457406044, 0.04672859609127045, 0.005846813321113586, 0.19053490459918976, 0.021371707320213318, 0.02655435912311077, 0.05842805281281471, 0.007784640416502953, -0.0018071122467517853, 0.04117465019226074, -0.03646749630570412, 0.014314495027065277, 0.12448717653751373, 0.03748828172683716, -0.060800954699516296, 0.1085808277130127, 0.12062211334705353, -0.06737703830003738, 0.11495926231145859, -0.007424011826515198, -0.010421160608530045, 0.10909464955329895, -0.09660376608371735, -0.10515370219945908, 0.01570696383714676, 0.04558666795492172, 0.028305422514677048, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][128][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23108>
       [
         [
           [
             [0.004732178524136543]
           ],
           [
             [-0.010826525278389454]
           ],
           [
             [-0.00972291361540556]
           ],
           [
             [0.008580264635384083]
           ],
           [
             [-0.022149275988340378]
           ],
           [
             [-0.021081754937767982]
           ],
           [
             [-0.008294394239783287]
           ],
           [
             [0.02070927433669567]
           ],
           [
             [-0.03590099886059761]
           ],
           [
             [0.036099907010793686]
           ],
           [
             [-0.0038990627508610487]
           ],
           [
             [-0.0015074065886437893]
           ],
           [
             [-0.01274938229471445]
           ],
           [
             [-0.0011134434025734663]
           ],
           [
             [-6.194077432155609e-4]
           ],
           [
             [-0.018077963963150978]
           ],
           [
             [0.007210513111203909]
           ],
           [
             [0.0077378167770802975]
           ],
           [
             [-0.01849287375807762]
           ],
           [
             [-0.003760911524295807]
           ],
           [
             [0.005658515263348818]
           ],
           [
             [0.0013087831903249025]
           ],
           [
             [-0.038895342499017715]
           ],
           [
             [0.007853779010474682]
           ],
           [
             [-0.013517971150577068]
           ],
           [
             [-0.020908478647470474]
           ],
           [
             [-0.012710780836641788]
           ],
           [
             [-0.005483848508447409]
           ],
           [
             [-0.014658576808869839]
           ],
           [
             [-0.024989183992147446]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_259" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23109>
       [0.09377417713403702, -0.16699424386024475, 0.07293206453323364, -0.12973688542842865, -0.09543664008378983, 0.04503244906663895, -0.038973450660705566, -0.07914914935827255, -0.1292264610528946, -0.07337316870689392, -0.05144652724266052, -0.13217617571353912, 0.03312744200229645, -0.12137223035097122, -0.10924245417118073, -0.18983016908168793, -0.0959831029176712, 0.09333932399749756, 0.23065221309661865, 0.0214221253991127, -0.10217837989330292, 0.9913166761398315, -0.025805935263633728, 0.11880898475646973, -0.08501829206943512, -0.20581969618797302, 0.20783275365829468, 0.03752484917640686, -0.0221792533993721, 0.3997785449028015, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23111>
       [
         [
           [
             [-0.06128905341029167, -0.03767102584242821, -0.03189960494637489],
             [-0.02558561973273754, -0.01254164706915617, -0.012434340082108974],
             [-0.0019436832517385483, 0.03400717303156853, 0.02130315452814102]
           ],
           [
             [-0.004635471850633621, -0.007590537425130606, -0.006472210865467787],
             [-6.903356406837702e-4, 0.021807491779327393, 0.023693738505244255],
             [0.01827724277973175, 0.04640205204486847, 0.07195030897855759]
           ],
           [
             [-0.0061161108314991, -0.007862861268222332, 0.0026009283028542995],
             [0.02133755385875702, 0.036621786653995514, 0.038110699504613876],
             [0.05778104439377785, 0.07410115748643875, 0.06904900074005127]
           ],
           [
             [0.01092059351503849, 0.016586197540163994, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_265" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23112>
       [0.41031813621520996, 0.33891570568084717, 0.14350324869155884, 0.07778601348400116, 0.07120604813098907, 0.10753029584884644, 0.12668165564537048, 0.29873231053352356, 0.3561055362224579, 0.2568209767341614, 0.2801537811756134, 0.20414629578590393, 0.06745529174804688, 0.24649176001548767, 0.2936386466026306, 0.12383732199668884, 0.31897231936454773, 0.3690835237503052, 0.19288179278373718, 0.18046556413173676, 0.25156721472740173, 0.2325526922941208, 0.24055176973342896, 0.08486039936542511, 0.27891093492507935, 0.34825456142425537, 0.29254794120788574, 0.18113252520561218, 0.12604591250419617, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23114>
       [
         [
           [
             [0.0024751487653702497, -0.034085340797901154, -0.03835613280534744],
             [-0.02956099808216095, -0.07599762082099915, -0.0804230123758316],
             [0.06862904876470566, 0.04243409261107445, -0.04399258643388748]
           ],
           [
             [0.02634502947330475, 0.0751102939248085, 0.05894612893462181],
             [-0.02407737821340561, -0.06078255549073219, -0.02126508206129074],
             [-0.020679164677858353, -0.016783995553851128, -0.06970132142305374]
           ],
           [
             [-0.021840833127498627, -0.07074422389268875, 0.010523536242544651],
             [-0.030584920197725296, -0.024858573451638222, 0.012052692472934723],
             [-0.001675385981798172, 0.02088983729481697, 0.014584148302674294]
           ],
           [
             [-0.014353886246681213, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_268" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23115>
       [-0.04742951691150665, -0.01686421036720276, -0.25404390692710876, -0.2854520380496979, -0.25164780020713806, -0.036855556070804596, 0.08410137891769409, -0.05769416689872742, -0.18498846888542175, -0.03686590492725372, -0.025324121117591858, -0.14799685776233673, -0.2658706605434418, 0.0496743880212307, -0.09760992228984833, -0.0155458003282547, -0.14772361516952515, 0.3469434380531311, -7.482320070266724e-4, -0.0927184447646141, -0.16172392666339874, 0.14168091118335724, -0.21372295916080475, -0.05334959924221039, -0.2903295159339905, -0.2302875965833664, 0.13425612449645996, 0.02347281575202942, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][256][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23117>
       [
         [
           [
             [0.008734465576708317]
           ],
           [
             [1.260630670003593e-4]
           ],
           [
             [0.021078413352370262]
           ],
           [
             [0.005081498064100742]
           ],
           [
             [0.011961364187300205]
           ],
           [
             [-0.01247117668390274]
           ],
           [
             [0.0013897938188165426]
           ],
           [
             [-0.06576383858919144]
           ],
           [
             [-0.01592460833489895]
           ],
           [
             [-0.06542298197746277]
           ],
           [
             [0.011016684584319592]
           ],
           [
             [-0.032227497547864914]
           ],
           [
             [0.025111552327871323]
           ],
           [
             [-0.010344806127250195]
           ],
           [
             [3.030621155630797e-4]
           ],
           [
             [-0.06530050933361053]
           ],
           [
             [0.07595432549715042]
           ],
           [
             [0.017762266099452972]
           ],
           [
             [-0.02203328162431717]
           ],
           [
             [0.03922390565276146]
           ],
           [
             [0.038076043128967285]
           ],
           [
             [-0.0023830230347812176]
           ],
           [
             [-0.03955771028995514]
           ],
           [
             [0.047160398215055466]
           ],
           [
             [0.019408337771892548]
           ],
           [
             [0.029593806713819504]
           ],
           [
             [0.004358192440122366]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_274" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23118>
       [-0.044551268219947815, 0.6531970500946045, 0.7115403413772583, 0.7224211692810059, 0.7231326699256897, 0.735939621925354, 0.03697866201400757, 0.2942344546318054, 0.27344030141830444, 0.5656091570854187, 0.6473287343978882, 0.49111002683639526, 0.7273029685020447, 0.028963789343833923, 0.5758552551269531, 1.1020814180374146, 0.2407553344964981, 2.097511053085327, 0.026813745498657227, 0.94841468334198, 0.02811834216117859, 1.1966273784637451, 0.3122836649417877, 0.7918332815170288, -0.24210304021835327, 0.4797571897506714, 0.48157840967178345, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23120>
       [
         [
           [
             [0.0015872081276029348, 0.06417305767536163, -0.032195378094911575],
             [-0.004664787091314793, 0.04206933081150055, -0.07415852695703506],
             [0.05711071938276291, 0.11900594830513, 0.01189915370196104]
           ],
           [
             [-0.12256816774606705, -0.13417966663837433, -0.11693727970123291],
             [-0.034808218479156494, -0.025902267545461655, -0.012859195470809937],
             [-0.06757167726755142, -0.09083666652441025, -0.09261424839496613]
           ],
           [
             [-0.14517639577388763, -0.13984498381614685, -0.12556324899196625],
             [-0.14354616403579712, -0.12954097986221313, -0.09490184485912323],
             [-0.1312723159790039, -0.09818514436483383, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "output1" => %{
     "kernel" => #Nx.Tensor<
       f32[512][2]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23122>
       [
         [0.005254666320979595, 0.15100258588790894],
         [-0.011043878272175789, -0.03457579016685486],
         [-0.007923453114926815, -0.0030333457980304956],
         [-0.03243527561426163, -0.008831282146275043],
         [-0.006293038837611675, -0.040399596095085144],
         [-0.04043736681342125, 0.053120654076337814],
         [0.06861234456300735, -0.002412833273410797],
         [-0.025858119130134583, 0.06279060244560242],
         [-0.043891314417123795, 0.002001610118895769],
         [0.03356955200433731, -0.02658887766301632],
         [0.08823095262050629, -0.06618508696556091],
         [0.0492500402033329, 0.034142494201660156],
         [0.02671916037797928, 0.0458889938890934],
         ...
       ]
     >
   },
   "ret" => %{
     "beta" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23123>
       [0.019600875675678253, 0.025821072980761528, -6.489195948233828e-5, 0.003589334199205041, 0.0031338955741375685, 0.013610259629786015, 0.007155769970268011, 0.02346169576048851, -0.006090241950005293, -0.010363097302615643, -0.041258905082941055, -0.008500073105096817, 0.01839730329811573, 0.0055549670942127705, -0.022942638024687767, -0.01202760636806488, 0.014973812736570835, -0.00730720441788435, 0.007979560643434525, 0.011952590197324753, -0.009555859491229057, 0.01753874495625496, 0.024672336876392365, -0.0015246381517499685, 0.02414730004966259, ...]
     >,
     "gamma" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23124>
       [1.0186330080032349, 0.996698260307312, 0.9812076687812805, 0.9914823174476624, 1.0059401988983154, 1.0011167526245117, 0.9952116012573242, 0.9976027607917786, 0.9926190376281738, 1.0029269456863403, 1.0111398696899414, 0.9863574504852295, 1.0119359493255615, 0.9947774410247803, 1.0145542621612549, 1.0128952264785767, 0.9740985035896301, 1.003001093864441, 0.984277069568634, 0.982774555683136, 0.9862943291664124, 1.0078012943267822, 0.9934849143028259, 1.0127661228179932, ...]
     >,
     "mean" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23125>
       [3.4188473224639893, 3.270092248916626, 3.307494878768921, 3.1980302333831787, 3.049362897872925, 2.976794719696045, 3.529273509979248, 4.117916107177734, 2.8261539936065674, 3.120123863220215, 2.8672266006469727, 2.886274814605713, 2.8638734817504883, 3.404776096343994, 2.999854326248169, 3.0485033988952637, 3.603266477584839, 3.9547922611236572, 3.4595134258270264, 2.7913570404052734, 3.149024486541748, 3.4817986488342285, 3.5285041332244873, ...]
     >,
     "var" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23126>
       [8.221498489379883, 5.197445869445801, 3.9460668563842773, 3.921175241470337, 8.296836853027344, 5.218442440032959, 6.61596155166626, 8.298115730285645, 2.515230655670166, 7.442317962646484, 5.561676025390625, 4.186655521392822, 6.3376545906066895, 3.7835898399353027, 7.333268165588379, 5.546231269836426, 4.657751560211182, 7.373143672943115, 5.236988067626953, 6.785642623901367, 4.639777183532715, 5.802654266357422, ...]
     >
   },
   "ret.3" => %{
     "kernel" => #Nx.Tensor<
       f32[1024][512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23128>
       [
         [0.09833378344774246, 0.02224254608154297, -0.0530877448618412, 0.02074247971177101, -0.05336613953113556, -0.05032508075237274, 0.014588700607419014, -0.05299871042370796, -0.05850294977426529, 0.016324948519468307, 0.0023102012928575277, 0.02088942378759384, -0.022296952083706856, -0.04155405983328819, 0.008024103939533234, 0.00273123593069613, -0.022583523765206337, 0.0627654418349266, -0.015062553808093071, -0.01996546983718872, -0.018407359719276428, -0.03356808423995972, 0.11431518942117691, -0.08084410429000854, ...],
         ...
       ]
     >
   },
   "ret.7" => %{
     "beta" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23129>
       [-0.041753217577934265, 0.05196209251880646, 0.0149048687890172, -0.03937583044171333, 0.044436682015657425, -0.03457950800657272, 0.04115293174982071, -0.041577283293008804, -0.03190606087446213, 0.05073971673846245, 0.039692290127277374, 0.038357656449079514, -0.029945427551865578, 0.0428413525223732, 0.0401594303548336, -0.0444255955517292, 0.042825814336538315, 0.03909890726208687, -0.03784821182489395, 0.04197309911251068, -0.04786713421344757, -0.029538413509726524, 0.04163031280040741, ...]
     >,
     "gamma" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23130>
       [1.0119315385818481, 0.9962266087532043, 0.9835289716720581, 0.9908992648124695, 0.9829221963882446, 0.9946608543395996, 1.0224061012268066, 0.9874153137207031, 0.9862425923347473, 0.9803566932678223, 1.0008001327514648, 0.9818745255470276, 1.0011365413665771, 0.9782065153121948, 0.9798407554626465, 0.9966987371444702, 1.007981777191162, 0.9703671932220459, 0.9764832258224487, 0.9880099296569824, 1.0063624382019043, 0.9865400791168213, ...]
     >,
     "mean" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23131>
       [1.761946439743042, 1.0505415201187134, 0.6971639394760132, 1.081170916557312, 1.0411185026168823, 1.2960827350616455, 0.9751063585281372, 1.6580326557159424, 1.3859546184539795, 1.0124022960662842, 1.1038469076156616, 0.8805375099182129, 1.185096263885498, 0.9167401790618896, 0.8892937302589417, 1.8594248294830322, 1.1572118997573853, 1.0641213655471802, 1.1005784273147583, 1.001948595046997, 0.9049599170684814, ...]
     >,
     "var" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.23132>
       [7.317668914794922, 3.0408143997192383, 1.0820187330245972, 3.0113775730133057, 2.710907220840454, 4.431440830230713, 2.607041120529175, 7.468499183654785, 5.365750312805176, 2.5836546421051025, 2.701380729675293, 1.663992166519165, 3.3480031490325928, 1.6480833292007446, 1.9680217504501343, 8.916132926940918, 3.3481805324554443, 2.572866439819336, 2.5147602558135986, 1.6796602010726929, ...]
     >
   }
 }}
```

We need a tensor representation of an image.

```elixir
File.read!("data/oxford-iiit-pet/images/havanese_71.jpg")
|> Kino.Image.new(:jpeg)
```

```elixir
{:ok, img} = StbImage.read_file("data/oxford-iiit-pet/images/havanese_71.jpg")
%StbImage{data: binary, shape: shape, type: type} = StbImage.resize(img, 224, 224)
```

<!-- livebook:{"output":true} -->

```
%StbImage{
  data: <<92, 92, 86, 93, 93, 88, 97, 96, 90, 98, 96, 91, 98, 95, 90, 102, 101, 95, 101, 101, 94,
    98, 97, 91, 100, 99, 94, 101, 100, 95, 101, 100, 95, 97, 96, 91, 100, 99, 94, 101, 101, 96, 100,
    99, 94, 99, 97, 92, 100, ...>>,
  shape: {224, 224, 3},
  type: {:u, 8}
}
```

```elixir
file_names = [
  "havanese_71.jpg",
  "yorkshire_terrier_9.jpg",
  "Sphynx_206.jpg",
  "Siamese_95.jpg",
  "Egyptian_Mau_63.jpg",
  "keeshond_175.jpg",
  "samoyed_88.jpg",
  "British_Shorthair_122.jpg",
  "Russian_Blue_20.jpg",
  "boxer_99.jpg"
]
```

<!-- livebook:{"output":true} -->

```
["havanese_71.jpg", "yorkshire_terrier_9.jpg", "Sphynx_206.jpg", "Siamese_95.jpg",
 "Egyptian_Mau_63.jpg", "keeshond_175.jpg", "samoyed_88.jpg", "British_Shorthair_122.jpg",
 "Russian_Blue_20.jpg", "boxer_99.jpg"]
```

```elixir
resized_images =
  file_names
  |> Enum.map(fn file_name ->
    ("data/oxford-iiit-pet/images/" <> file_name)
    |> IO.inspect(label: file_name)
    |> StbImage.read_file!()
    |> StbImage.resize(224, 224)
  end)
```

<!-- livebook:{"output":true} -->

```
havanese_71.jpg: "data/oxford-iiit-pet/images/havanese_71.jpg"
yorkshire_terrier_9.jpg: "data/oxford-iiit-pet/images/yorkshire_terrier_9.jpg"
Sphynx_206.jpg: "data/oxford-iiit-pet/images/Sphynx_206.jpg"
Siamese_95.jpg: "data/oxford-iiit-pet/images/Siamese_95.jpg"
Egyptian_Mau_63.jpg: "data/oxford-iiit-pet/images/Egyptian_Mau_63.jpg"
keeshond_175.jpg: "data/oxford-iiit-pet/images/keeshond_175.jpg"
samoyed_88.jpg: "data/oxford-iiit-pet/images/samoyed_88.jpg"
British_Shorthair_122.jpg: "data/oxford-iiit-pet/images/British_Shorthair_122.jpg"
Russian_Blue_20.jpg: "data/oxford-iiit-pet/images/Russian_Blue_20.jpg"
boxer_99.jpg: "data/oxford-iiit-pet/images/boxer_99.jpg"
```

<!-- livebook:{"output":true} -->

```
[
  %StbImage{
    data: <<92, 92, 86, 93, 93, 88, 97, 96, 90, 98, 96, 91, 98, 95, 90, 102, 101, 95, 101, 101, 94,
      98, 97, 91, 100, 99, 94, 101, 100, 95, 101, 100, 95, 97, 96, 91, 100, 99, 94, 101, 101, 96,
      100, 99, 94, 99, 97, 92, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<199, 176, 160, 200, 179, 162, 200, 179, 161, 203, 181, 161, 204, 183, 165, 204, 183,
      168, 205, 184, 169, 205, 185, 168, 208, 186, 171, 208, 185, 172, 208, 186, 172, 208, 186, 172,
      209, 189, 174, 208, 189, 174, 208, 189, 174, 209, 191, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<3, 3, 2, 4, 4, 2, 5, 5, 3, 6, 5, 4, 7, 6, 4, 7, 6, 4, 6, 5, 4, 7, 5, 4, 8, 5, 4, 7, 5,
      4, 7, 4, 3, 8, 5, 4, 8, 5, 5, 7, 4, 4, 7, 4, 3, 8, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
      254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
      255, 255, 255, 255, 255, 255, 255, 255, 255, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<71, 87, 41, 79, 98, 44, 90, 109, 51, 70, 92, 44, 48, 70, 38, 35, 56, 29, 25, 41, 19, 20,
      30, 14, 36, 48, 25, 44, 61, 29, 36, 53, 25, 26, 38, 18, 21, 31, 15, 36, 48, 25, 50, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<71, 72, 69, 69, 70, 64, 37, 42, 32, 4, 5, 3, 5, 5, 3, 12, 12, 10, 21, 21, 19, 60, 57,
      56, 60, 60, 54, 49, 48, 43, 63, 59, 55, 66, 63, 58, 69, 70, 63, 51, 56, 48, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<177, 167, 178, 177, 167, 178, 177, 167, 178, 176, 167, 177, 176, 168, 177, 177, 168,
      177, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178,
      177, 167, 178, 177, 167, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<60, 95, 57, 59, 92, 52, 54, 88, 47, 46, 84, 41, 43, 79, 38, 39, 76, 35, 36, 70, 28, 33,
      66, 25, 33, 61, 23, 27, 59, 25, 25, 57, 25, 24, 56, 22, 27, 54, 23, 26, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  },
  %StbImage{
    data: <<9, 9, 7, 6, 6, 4, 7, 7, 5, 6, 6, 4, 7, 7, 5, 9, 9, 7, 9, 9, 7, 10, 10, 8, 11, 11, 9, 11,
      11, 9, 12, 12, 10, 14, 14, 12, 13, 13, 11, ...>>,
    shape: {224, 224, 3},
    type: {:u, 8}
  }
]
```

```elixir
resized_binaries =
  Enum.map(resized_images, fn stb_image ->
    stb_image.data
  end)
```

<!-- livebook:{"output":true} -->

```
[
  <<92, 92, 86, 93, 93, 88, 97, 96, 90, 98, 96, 91, 98, 95, 90, 102, 101, 95, 101, 101, 94, 98, 97,
    91, 100, 99, 94, 101, 100, 95, 101, 100, 95, 97, 96, 91, 100, 99, 94, 101, 101, 96, 100, 99, 94,
    99, 97, 92, 100, ...>>,
  <<199, 176, 160, 200, 179, 162, 200, 179, 161, 203, 181, 161, 204, 183, 165, 204, 183, 168, 205,
    184, 169, 205, 185, 168, 208, 186, 171, 208, 185, 172, 208, 186, 172, 208, 186, 172, 209, 189,
    174, 208, 189, 174, 208, 189, 174, 209, 191, 175, ...>>,
  <<3, 3, 2, 4, 4, 2, 5, 5, 3, 6, 5, 4, 7, 6, 4, 7, 6, 4, 6, 5, 4, 7, 5, 4, 8, 5, 4, 7, 5, 4, 7, 4,
    3, 8, 5, 4, 8, 5, 5, 7, 4, 4, 7, 4, 3, 8, 5, ...>>,
  <<254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 255,
    255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
    255, 255, 255, 255, 255, 255, 255, 255, ...>>,
  <<0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ...>>,
  <<71, 87, 41, 79, 98, 44, 90, 109, 51, 70, 92, 44, 48, 70, 38, 35, 56, 29, 25, 41, 19, 20, 30, 14,
    36, 48, 25, 44, 61, 29, 36, 53, 25, 26, 38, 18, 21, 31, 15, 36, 48, 25, 50, 62, ...>>,
  <<71, 72, 69, 69, 70, 64, 37, 42, 32, 4, 5, 3, 5, 5, 3, 12, 12, 10, 21, 21, 19, 60, 57, 56, 60,
    60, 54, 49, 48, 43, 63, 59, 55, 66, 63, 58, 69, 70, 63, 51, 56, 48, 6, ...>>,
  <<177, 167, 178, 177, 167, 178, 177, 167, 178, 176, 167, 177, 176, 168, 177, 177, 168, 177, 177,
    167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167, 178, 177, 167,
    178, 177, 167, 178, ...>>,
  <<60, 95, 57, 59, 92, 52, 54, 88, 47, 46, 84, 41, 43, 79, 38, 39, 76, 35, 36, 70, 28, 33, 66, 25,
    33, 61, 23, 27, 59, 25, 25, 57, 25, 24, 56, 22, 27, 54, 23, 26, 54, ...>>,
  <<9, 9, 7, 6, 6, 4, 7, 7, 5, 6, 6, 4, 7, 7, 5, 9, 9, 7, 9, 9, 7, 10, 10, 8, 11, 11, 9, 11, 11, 9,
    12, 12, 10, 14, 14, 12, 13, 13, 11, 14, ...>>
]
```

```elixir
img_tensors =
  resized_binaries
  |> Nx.from_binary(:u8)
  |> Nx.reshape(shape, names: [:x, :y, :z])
  |> Nx.transpose(axes: [:z, :x, :y])
  |> Nx.new_axis(0)
```

```elixir
objects = [
  "dog",
  "cat"
]
```

<!-- livebook:{"output":true} -->

```
["dog", "cat"]
```

```elixir
{cats_v_dogs_model, cats_v_dogs_params} = Axon.deserialize(cats_v_dogs)
# # Axon.predict(cats_v_dogs_model, cats_v_dogs_params, tensor)
```

<!-- livebook:{"output":true} -->

```
{------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                              Model
==================================================================================================================================================================
 Layer                                                                Shape                                    Policy              Parameters   Parameters Memory
==================================================================================================================================================================
 actual_input_1 ( input )                                             {10, 3, 224, 224}                        p=f32 c=f32 o=f32   0            0 bytes
 input.4 ( conv["actual_input_1"] )                                   {10, 64, 112, 112}                       p=f32 c=f32 o=f32   9472         37888 bytes
 onnx::MaxPool_135 ( relu["input.4"] )                                {10, 64, 112, 112}                       p=f32 c=f32 o=f32   0            0 bytes
 input.8 ( max_pool["onnx::MaxPool_135"] )                            {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.16 ( conv["input.8"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 onnx::Conv_139 ( relu["input.16"] )                                  {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_223 ( conv["onnx::Conv_139"] )                             {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 container_0 ( container {"onnx::Add_223", "input.8"} )               {{10, 64, 56, 56}, {10, 64, 56, 56}}     p=f32 c=f32 o=f32   0            0 bytes
 add_0 ( add["container_0"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.24 ( relu["add_0"] )                                           {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.32 ( conv["input.24"] )                                        {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 onnx::Conv_146 ( relu["input.32"] )                                  {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_229 ( conv["onnx::Conv_146"] )                             {10, 64, 56, 56}                         p=f32 c=f32 o=f32   36928        147712 bytes
 container_1 ( container {"onnx::Add_229", "input.24"} )              {{10, 64, 56, 56}, {10, 64, 56, 56}}     p=f32 c=f32 o=f32   0            0 bytes
 add_1 ( add["container_1"] )                                         {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.40 ( relu["add_1"] )                                           {10, 64, 56, 56}                         p=f32 c=f32 o=f32   0            0 bytes
 input.48 ( conv["input.40"] )                                        {10, 128, 28, 28}                        p=f32 c=f32 o=f32   73856        295424 bytes
 onnx::Conv_153 ( relu["input.48"] )                                  {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_235 ( conv["onnx::Conv_153"] )                             {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 onnx::Add_238 ( conv["input.40"] )                                   {10, 128, 28, 28}                        p=f32 c=f32 o=f32   8320         33280 bytes
 container_2 ( container {"onnx::Add_235", "onnx::Add_238"} )         {{10, 128, 28, 28}, {10, 128, 28, 28}}   p=f32 c=f32 o=f32   0            0 bytes
 add_2 ( add["container_2"] )                                         {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.60 ( relu["add_2"] )                                           {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.68 ( conv["input.60"] )                                        {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 onnx::Conv_162 ( relu["input.68"] )                                  {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_244 ( conv["onnx::Conv_162"] )                             {10, 128, 28, 28}                        p=f32 c=f32 o=f32   147584       590336 bytes
 container_3 ( container {"onnx::Add_244", "input.60"} )              {{10, 128, 28, 28}, {10, 128, 28, 28}}   p=f32 c=f32 o=f32   0            0 bytes
 add_3 ( add["container_3"] )                                         {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.76 ( relu["add_3"] )                                           {10, 128, 28, 28}                        p=f32 c=f32 o=f32   0            0 bytes
 input.84 ( conv["input.76"] )                                        {10, 256, 14, 14}                        p=f32 c=f32 o=f32   295168       1180672 bytes
 onnx::Conv_169 ( relu["input.84"] )                                  {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_250 ( conv["onnx::Conv_169"] )                             {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 onnx::Add_253 ( conv["input.76"] )                                   {10, 256, 14, 14}                        p=f32 c=f32 o=f32   33024        132096 bytes
 container_4 ( container {"onnx::Add_250", "onnx::Add_253"} )         {{10, 256, 14, 14}, {10, 256, 14, 14}}   p=f32 c=f32 o=f32   0            0 bytes
 add_4 ( add["container_4"] )                                         {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.96 ( relu["add_4"] )                                           {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.104 ( conv["input.96"] )                                       {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 onnx::Conv_178 ( relu["input.104"] )                                 {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_259 ( conv["onnx::Conv_178"] )                             {10, 256, 14, 14}                        p=f32 c=f32 o=f32   590080       2360320 bytes
 container_5 ( container {"onnx::Add_259", "input.96"} )              {{10, 256, 14, 14}, {10, 256, 14, 14}}   p=f32 c=f32 o=f32   0            0 bytes
 add_5 ( add["container_5"] )                                         {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.112 ( relu["add_5"] )                                          {10, 256, 14, 14}                        p=f32 c=f32 o=f32   0            0 bytes
 input.120 ( conv["input.112"] )                                      {10, 512, 7, 7}                          p=f32 c=f32 o=f32   1180160      4720640 bytes
 onnx::Conv_185 ( relu["input.120"] )                                 {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_265 ( conv["onnx::Conv_185"] )                             {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 onnx::Add_268 ( conv["input.112"] )                                  {10, 512, 7, 7}                          p=f32 c=f32 o=f32   131584       526336 bytes
 container_6 ( container {"onnx::Add_265", "onnx::Add_268"} )         {{10, 512, 7, 7}, {10, 512, 7, 7}}       p=f32 c=f32 o=f32   0            0 bytes
 add_6 ( add["container_6"] )                                         {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.132 ( relu["add_6"] )                                          {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.140 ( conv["input.132"] )                                      {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 onnx::Conv_194 ( relu["input.140"] )                                 {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Add_274 ( conv["onnx::Conv_194"] )                             {10, 512, 7, 7}                          p=f32 c=f32 o=f32   2359808      9439232 bytes
 container_7 ( container {"onnx::Add_274", "input.132"} )             {{10, 512, 7, 7}, {10, 512, 7, 7}}       p=f32 c=f32 o=f32   0            0 bytes
 add_7 ( add["container_7"] )                                         {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 input.148 ( relu["add_7"] )                                          {10, 512, 7, 7}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Concat_199 ( max_pool["input.148"] )                           {10, 512, 1, 1}                          p=f32 c=f32 o=f32   0            0 bytes
 onnx::Concat_200 ( global_avg_pool["input.148"] )                    {10, 512, 1, 1}                          p=f32 c=f32 o=f32   0            0 bytes
 container_8 ( container {"onnx::Concat_199", "onnx::Concat_200"} )   {{10, 512, 1, 1}, {10, 512, 1, 1}}       p=f32 c=f32 o=f32   0            0 bytes
 onnx::Reshape_201 ( concatenate["container_8"] )                     {10, 1024, 1, 1}                         p=f32 c=f32 o=f32   0            0 bytes
 x ( reshape["onnx::Reshape_201"] )                                   {10, 1024}                               p=f32 c=f32 o=f32   0            0 bytes
 ret ( batch_norm["x"] )                                              {10, 1024}                               p=f32 c=f32 o=f32   4096         16384 bytes
 ret.3 ( dense["ret"] )                                               {10, 512}                                p=f32 c=f32 o=f32   524288       2097152 bytes
 onnx::BatchNormalization_213 ( relu["ret.3"] )                       {10, 512}                                p=f32 c=f32 o=f32   0            0 bytes
 ret.7 ( batch_norm["onnx::BatchNormalization_213"] )                 {10, 512}                                p=f32 c=f32 o=f32   2048         8192 bytes
 output1 ( dense["ret.7"] )                                           {10, 2}                                  p=f32 c=f32 o=f32   1024         4096 bytes
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Total Parameters: 11703168
Total Parameters Memory: 46812672 bytes
Inputs: %{"actual_input_1" => {10, 3, 224, 224}}
,
 %{
   "input.104" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25764>
       [-0.07698848098516464, 0.01005774736404419, -0.29242366552352905, 0.0019955039024353027, 0.3025658130645752, 0.2056763768196106, -0.04200617969036102, 0.5553656816482544, 0.1181923896074295, 0.20941713452339172, -0.09031594544649124, 0.0772099643945694, 0.08073383569717407, 0.21969042718410492, 0.19975337386131287, -0.0763862282037735, 0.2088490128517151, 0.07211913168430328, 0.05396266281604767, 0.26068153977394104, 0.11317706108093262, 0.2509128451347351, 0.08953508734703064, 0.029617294669151306, 0.10492880642414093, -0.09331247210502625, -0.007692441344261169, -0.02981698513031006, 0.30428361892700195, 0.4858894348144531, 0.02639921009540558, 0.07519197463989258, 0.32269251346588135, -0.1477847844362259, 0.07227930426597595, 0.30919963121414185, 0.17370373010635376, 0.23546509444713593, -0.19405265152454376, 0.2505050301551819, 0.64827960729599, 0.133283793926239, -0.05243930220603943, 0.07765178382396698, -0.6925174593925476, 0.3704501986503601, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25766>
       [
         [
           [
             [0.02614687755703926, 0.025767508894205093, 0.020337287336587906],
             [0.026719585061073303, 0.030007194727659225, 0.03057476133108139],
             [0.012417474761605263, 0.007371111772954464, 0.01369593758136034]
           ],
           [
             [-0.0022997132036834955, -0.00229219370521605, 0.0018838263349607587],
             [-7.486026152037084e-4, 0.0014842364471405745, 0.010626564733684063],
             [-0.011924941092729568, -0.011940940283238888, -0.0015262285014614463]
           ],
           [
             [-0.006402440369129181, -0.010851002298295498, -0.012681915424764156],
             [-0.007186469156295061, -0.012615576386451721, -0.013335059396922588],
             [0.005031156819313765, 0.00330534134991467, -0.0034578582271933556]
           ],
           [
             [-0.008914215490221977, -0.009714227169752121, -0.014913606457412243],
             [-0.0014316821470856667, -0.001900480012409389, -0.008630848489701748],
             [-0.0019450135296210647, -6.528167286887765e-4, 8.65212525241077e-4]
           ],
           [
             [-0.0068631949834525585, 4.335563280619681e-4, 0.0039869677275419235],
             [-7.43162352591753e-4, -7.528341029683361e-6, 0.0010943238157778978],
             [0.0019862581975758076, 0.004924888722598553, -0.0021786559373140335]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.120" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25767>
       [-0.10572459548711777, -0.11846917867660522, -0.09777916967868805, 0.16959567368030548, 0.09687180817127228, 0.010192334651947021, 0.13911810517311096, -0.1521855890750885, 0.2417343556880951, 0.38908272981643677, -0.09842227399349213, 0.09030516445636749, 0.13568522036075592, -0.03406284749507904, 0.08684715628623962, 0.19467531144618988, 0.04526251554489136, 0.04953789710998535, -0.09251882880926132, -0.031383588910102844, 0.058825984597206116, 0.1154089868068695, 0.41848257184028625, 0.04909983277320862, 0.035811811685562134, 0.1009032130241394, -0.23584529757499695, 0.0834747850894928, 0.09255170822143555, 0.11874884366989136, 0.1140483170747757, 0.18378567695617676, 0.07199613749980927, -2.91973352432251e-4, -0.15247739851474762, 0.11946265399456024, 0.4576561450958252, -0.20915348827838898, 0.21811756491661072, -0.010606884956359863, 0.2302621304988861, 0.4834349453449249, 0.15125837922096252, 0.240052729845047, 0.03063642978668213, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25769>
       [
         [
           [
             [-0.0069506517611444, -0.011913730762898922, -0.016244102269411087],
             [0.01624591462314129, 0.018739555031061172, 0.021362917497754097],
             [0.03264600411057472, 0.025104619562625885, 0.0362275093793869]
           ],
           [
             [-0.004737531766295433, 0.0025043662171810865, -0.0024350315798074007],
             [0.005271486472338438, 0.011218161322176456, -0.0016436020378023386],
             [-0.002389603527262807, 0.009678907692432404, 0.0014877598732709885]
           ],
           [
             [0.01452074758708477, -0.0071432082913815975, -0.010270277969539165],
             [0.006890798918902874, -0.001873424625955522, -0.009114592336118221],
             [-0.002817087573930621, -0.02050982229411602, -0.006559439469128847]
           ],
           [
             [-0.009256582707166672, -0.00805663876235485, -0.012237964197993279],
             [0.013546795584261417, 0.014232580550014973, -0.00168566033244133],
             [0.02288999781012535, 0.03836241737008095, 0.020205270498991013]
           ],
           [
             [0.010642869397997856, 0.009636709466576576, 0.00732016796246171],
             [0.007248078938573599, 0.003323798766359687, -0.0071490975096821785],
             [0.015255681239068508, 0.002258871216326952, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.140" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25770>
       [0.22365501523017883, 0.3255944848060608, 0.03632834553718567, 0.17389914393424988, 0.33867383003234863, 0.17097343504428864, 0.18277433514595032, 0.17873787879943848, 0.04931984841823578, 0.21356964111328125, 0.1668655425310135, 0.1472989320755005, 0.19135740399360657, 0.20891305804252625, 0.10042661428451538, 0.1630324423313141, 0.19358083605766296, 0.15929311513900757, 0.23840822279453278, 0.11815902590751648, 0.1560843586921692, 0.03658680617809296, 0.21033358573913574, 0.13193467259407043, 0.4298895597457886, 0.23043963313102722, 0.0953405499458313, 0.15789783000946045, 0.11923062801361084, 0.17728441953659058, 0.17035016417503357, 0.2683279812335968, 0.28951412439346313, 0.28024017810821533, 0.16175705194473267, 0.28272444009780884, 0.21870452165603638, 0.2182374894618988, 0.2055005133152008, 0.12207069993019104, 0.13021895289421082, 0.20153307914733887, 0.19799542427062988, 0.17905594408512115, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25772>
       [
         [
           [
             [-0.006087283603847027, -0.0037324121221899986, 0.004210663493722677],
             [0.003997993655502796, -0.002420815173536539, 0.009816263802349567],
             [0.009532870724797249, 0.011420544236898422, 0.018372278660535812]
           ],
           [
             [-8.217027061618865e-4, 0.009027659893035889, 0.008258873596787453],
             [-0.013711262494325638, -0.01039784774184227, -0.006547174416482449],
             [-0.008709448389708996, -0.0030824800487607718, -0.0015141486655920744]
           ],
           [
             [-0.008220995776355267, -0.010078279301524162, 5.357113550417125e-4],
             [-0.012808258645236492, -0.02033696137368679, -0.009229273535311222],
             [-0.009781880304217339, -0.019086506217718124, -0.016526414081454277]
           ],
           [
             [0.006127198692411184, -0.004017672035843134, 0.0034708643797785044],
             [-0.007504190318286419, -0.030697310343384743, -0.0037877385038882494],
             [0.003571337554603815, -0.013728288002312183, -3.821973514277488e-4]
           ],
           [
             [-7.734804239589721e-5, 0.006738365162163973, 0.006456592585891485],
             [-0.002163062570616603, -0.006593876052647829, 0.006232370622456074],
             [-0.01601400598883629, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.16" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25773>
       [0.37990933656692505, 0.3218666613101959, 0.16831915080547333, 0.3931892514228821, 0.763494610786438, 0.4857133626937866, 0.3515614867210388, 0.13787633180618286, 0.5774635076522827, 0.3130865693092346, 0.10011313855648041, 0.936164379119873, 0.17819204926490784, 0.3233267068862915, 0.36298659443855286, 0.36155372858047485, 0.7021536827087402, 0.034171462059020996, 0.8515594005584717, 0.3245978355407715, 0.46091997623443604, 0.8094245195388794, 0.8812625408172607, 0.3713739514350891, 0.08468124270439148, 0.11187172681093216, -0.08830428123474121, 0.8135523796081543, 0.012593522667884827, -0.23173870146274567, -0.10953062772750854, 0.973979651927948, 0.5326406955718994, 1.2345328330993652, 0.9136295318603516, 0.6518380641937256, 0.48924002051353455, 0.10945136845111847, 1.2650940418243408, 0.9265995025634766, 0.19324131309986115, 0.6232962608337402, -0.19004525244235992, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25775>
       [
         [
           [
             [0.02852058783173561, -0.04688582941889763, -0.009870285168290138],
             [-0.036682091653347015, -0.3944665193557739, -0.10496123880147934],
             [0.03248235210776329, -0.04754950478672981, -0.005890701897442341]
           ],
           [
             [-0.0034482628107070923, 0.0070760129019618034, 2.871125179808587e-4],
             [0.020397663116455078, -0.07957383990287781, -0.011445245705544949],
             [0.0016259819967672229, 0.003555369097739458, 0.03541930764913559]
           ],
           [
             [-1.1664949006728875e-9, -1.9387723426689263e-8, -1.6278033143635184e-8],
             [1.0731672439590056e-8, 4.1125329808267e-9, 6.192348855904584e-9],
             [5.619081200336495e-9, 4.3493377788195176e-9, 7.655228451142193e-9]
           ],
           [
             [7.0921890437603e-4, -0.0024188237730413675, 0.003535578027367592],
             [-0.01041549164801836, -0.03359304368495941, -0.0076818340457975864],
             [0.01284951064735651, -0.007094447035342455, -0.002549633849412203]
           ],
           [
             [-2.436618240508892e-9, -2.631166395872242e-9, 1.4241985368812493e-9],
             [-1.4863420494393154e-9, -7.318725070426524e-10, -2.45500197948445e-9],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.32" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25776>
       [0.20127102732658386, -0.9952641725540161, 0.5847458839416504, 0.12825369834899902, 0.2959117889404297, 0.8470251560211182, 0.1946808248758316, 0.021027319133281708, 0.2482551485300064, 0.3393520414829254, 0.39857667684555054, 0.2259189784526825, 0.8574326038360596, 0.32842570543289185, -0.12372028827667236, -0.10815206170082092, 0.23135128617286682, 0.0881309062242508, 0.7154066562652588, 0.21226254105567932, -0.240741565823555, 0.803473174571991, 0.7410016059875488, -0.04813205823302269, -0.18600982427597046, 0.7162063121795654, 0.817489504814148, 0.4731639623641968, -0.44671452045440674, 0.048422157764434814, -0.4452275037765503, 1.195218801498413, 0.45905426144599915, -0.0024999380111694336, 0.8698665499687195, 1.2176921367645264, -0.01756465435028076, -0.08467242121696472, 0.3391311764717102, 0.6675218939781189, -0.8215893507003784, 0.11658388376235962, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25778>
       [
         [
           [
             [0.009119702503085136, -0.0023851688019931316, -0.0017161598661914468],
             [-0.009053944610059261, -0.005614599213004112, -0.016194459050893784],
             [0.023485438898205757, 0.03502606600522995, 0.020054049789905548]
           ],
           [
             [0.00651545450091362, -0.004008195362985134, -0.004853824153542519],
             [-0.01962578110396862, -0.010938171297311783, -0.025147773325443268],
             [-6.474195397458971e-4, 0.0216281246393919, 0.02357546053826809]
           ],
           [
             [0.009918298572301865, 0.001854213885962963, -0.0045756995677948],
             [-0.004393100272864103, -0.011832645162940025, -0.013118984177708626],
             [-0.01397789642214775, -0.022315314039587975, -0.012034923769533634]
           ],
           [
             [-0.002816649153828621, -0.021313456818461418, 0.031934041529893875],
             [0.015256606042385101, -0.006883732974529266, 0.02629493921995163],
             [0.014792095869779587, 0.015564211644232273, -0.027571242302656174]
           ],
           [
             [0.029471054673194885, 0.03621990233659744, 0.0314432755112648],
             [0.004341225139796734, 0.007149304263293743, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.4" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25779>
       [0.2312699556350708, 0.2539170980453491, -1.0542993322815164e-6, -0.663280189037323, -1.65705582588771e-8, 0.16148895025253296, 0.45808371901512146, -4.301947740259493e-7, 0.2990066707134247, -8.004711162357125e-6, 0.34993553161621094, 0.3099365234375, -0.25507789850234985, -3.476783967926167e-5, 0.10849656909704208, 0.2181277573108673, 0.3782581686973572, -0.5334565043449402, -0.6226300001144409, 0.5702671408653259, 0.2990571856498718, 0.5842980146408081, 0.48089054226875305, 0.3259250819683075, 0.196046382188797, 0.19689570367336273, 0.15151402354240417, 0.10306964814662933, 0.49246418476104736, 0.01435165200382471, 0.16649474203586578, 0.33064156770706177, 0.26252901554107666, 0.4510307312011719, -0.287678599357605, -0.03152579069137573, -2.450685485655413e-7, 0.32332688570022583, -4.91517653244955e-8, 0.23630012571811676, 0.23290564119815826, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][3][7][7]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25781>
       [
         [
           [
             [-0.0027864845469594, -0.0016342118615284562, -4.7409505350515246e-4, 0.019910670816898346, 0.015070035122334957, 0.0045613618567585945, -0.00335705722682178],
             [0.002938301768153906, 0.0025417066644877195, -0.029225626960396767, -0.07458438724279404, -0.07211697101593018, -0.034295082092285156, 0.0010245585581287742],
             [-0.0018477316480129957, 0.015730462968349457, 0.07859671115875244, 0.1561736762523651, 0.1382288932800293, 0.0682004913687706, 0.01694023236632347],
             [0.00811030250042677, -0.01780691370368004, -0.07933825254440308, -0.11663831025362015, -0.07200582325458527, -1.3758291606791317e-4, 0.01534556970000267],
             [-0.007329944521188736, 0.00427159434184432, 0.019315151497721672, -0.014370156452059746, -0.08849774301052094, -0.11182154715061188, -0.06854436546564102],
             [0.008127950131893158, 0.01088708732277155, 0.016713643446564674, 0.06356146931648254, 0.11006572842597961, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.48" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25782>
       [-0.11886826902627945, -0.33443886041641235, 0.013828959316015244, 0.02174646407365799, 0.12128620594739914, 0.23426568508148193, 0.03272096440196037, -0.042807865887880325, 0.0404532253742218, -0.15522322058677673, -0.18877919018268585, 0.20862093567848206, 0.0039043352007865906, 0.2622738778591156, 0.09400896728038788, -0.049010708928108215, -0.14131289720535278, 0.7244950532913208, -0.19315311312675476, 0.2086881697177887, 0.11119037121534348, 0.052645519375801086, -0.29006198048591614, 0.18765467405319214, -0.09289209544658661, 0.15299533307552338, -0.0058333054184913635, -0.021728873252868652, 0.031724005937576294, -0.1342010647058487, -0.1068495586514473, -0.16024520993232727, 0.5561146140098572, -0.13258299231529236, -0.16088783740997314, 0.12437494844198227, -0.3662029504776001, -0.05061504244804382, 0.1591712236404419, 0.16675984859466553, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25784>
       [
         [
           [
             [-0.02847444638609886, -0.043880779296159744, -0.054519496858119965],
             [0.028072888031601906, -0.005857127718627453, -0.040011584758758545],
             [0.047497451305389404, 0.03479298576712608, -0.0032480184454470873]
           ],
           [
             [-0.009492040611803532, -0.002502299379557371, 9.598138276487589e-4],
             [0.002479083137586713, 0.007492908742278814, 0.010058281011879444],
             [0.00100368179846555, -0.0015665485989302397, -0.004772923421114683]
           ],
           [
             [0.0024738856591284275, 0.0025977990590035915, -0.004827423952519894],
             [0.0031707603484392166, -0.005340449046343565, -0.016957173123955727],
             [0.006952904164791107, -0.005504492204636335, -0.018733441829681396]
           ],
           [
             [-0.015083929523825645, -0.014652482233941555, 0.004228046163916588],
             [-0.006702282931655645, -0.01937788724899292, -0.0037429723888635635],
             [0.01229893323034048, 0.002893339842557907, 2.8878511511720717e-4]
           ],
           [
             [0.021189836785197258, 0.021581247448921204, 0.011273727752268314],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.68" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25785>
       [0.06363719701766968, 0.12454283237457275, -0.4868748188018799, 0.28491437435150146, 0.3300909399986267, 0.23228782415390015, 0.1323007196187973, 0.29937049746513367, -0.03598432242870331, 0.029789581894874573, 0.08868679404258728, -0.028874754905700684, -0.029456742107868195, 0.10879096388816833, 0.04539971053600311, 0.2838408946990967, -0.060889214277267456, 0.05392155051231384, -0.2974337339401245, -0.026325494050979614, -0.06989763677120209, 0.24272799491882324, 0.03482946753501892, -0.07824806869029999, 0.3955499529838562, -0.12267129123210907, 0.13590383529663086, -0.18189255893230438, 0.12301412224769592, 0.01869902014732361, 0.16308103501796722, 0.3462766408920288, -0.33969688415527344, -0.12147597968578339, -0.1312331110239029, 0.1521211862564087, 0.2904030382633209, -0.026235759258270264, 0.010526105761528015, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25787>
       [
         [
           [
             [-7.224438595585525e-4, -0.005018723197281361, -0.0050988029688596725],
             [0.016236836090683937, 0.0012635329039767385, 0.0038442485965788364],
             [0.006330016069114208, -0.010664219036698341, 0.0025894201826304197]
           ],
           [
             [-0.014006665907800198, -9.813163196668029e-4, -0.009485390968620777],
             [-0.01112962793558836, 0.006102378945797682, 0.004431290086358786],
             [0.007095294073224068, -0.004739671479910612, -0.007499272469431162]
           ],
           [
             [-7.777361897751689e-4, 0.019805217161774635, 0.014628829434514046],
             [-0.03968043252825737, -0.015386313199996948, 0.0015584371285513043],
             [0.02642739564180374, -0.06728470325469971, -0.038984689861536026]
           ],
           [
             [0.003051272127777338, 0.006281201262027025, 0.008080103434622288],
             [0.006040406413376331, 0.006510076113045216, 0.012488026171922684],
             [-0.0025514266453683376, -0.0017358652548864484, 0.0068726614117622375]
           ],
           [
             [-0.0032081487588584423, -0.02310694195330143, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "input.84" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25788>
       [0.005413368344306946, 0.1103406697511673, 0.1598835289478302, 0.020523834973573685, 0.2535810172557831, -0.16290055215358734, -0.13576750457286835, -0.1152309998869896, -0.13189774751663208, 0.04200683534145355, 0.2517155110836029, 0.22553695738315582, 0.5855043530464172, 0.1902714967727661, 0.6141594648361206, 0.1833437830209732, -0.2960292100906372, 0.38074350357055664, -0.3015894293785095, 0.09196387976408005, 0.1026059091091156, 0.3396714925765991, -0.14018535614013672, -0.06948274374008179, 0.2615770101547241, 0.41740286350250244, 0.19529937207698822, -0.4550052583217621, 0.07394587248563766, -0.1513572633266449, 0.37607264518737793, 0.19779148697853088, -0.3972437381744385, 0.050135936588048935, -0.033174872398376465, 0.2875499427318573, 0.16250431537628174, -0.0421157032251358, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25790>
       [
         [
           [
             [-0.009579897858202457, -0.009876052848994732, -0.008709308691322803],
             [-0.00370199978351593, 0.008352544158697128, 0.005612488370388746],
             [-0.009238784201443195, -5.180324660614133e-4, -0.006406772416085005]
           ],
           [
             [-0.005047425627708435, -0.009619542397558689, -0.003416219260543585],
             [0.006272618658840656, -0.005559222772717476, -0.0021619610488414764],
             [0.003726070746779442, -0.008987289853394032, -0.004497491288930178]
           ],
           [
             [-0.013821644708514214, -0.02213606983423233, -0.019220760092139244],
             [-0.01852959580719471, -0.033153437077999115, -0.02219797670841217],
             [-0.02064291387796402, -0.02146298438310623, -0.009335938841104507]
           ],
           [
             [-0.011065968312323093, -0.002006825525313616, -0.004430562723428011],
             [-0.01689849980175495, -0.007824653759598732, -0.011673172935843468],
             [-0.00804092362523079, -0.013531683012843132, -0.008033565245568752]
           ],
           [
             [-0.01130233146250248, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_223" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25791>
       [0.11738873273134232, 0.002275177277624607, -1.2436293363571167, -0.3202255964279175, 0.07866537570953369, -0.1324450820684433, 0.032061927020549774, 0.019379908218979836, 0.9463146924972534, -0.06115877255797386, 0.06843052804470062, 0.4923355281352997, 0.09422362595796585, -0.16739559173583984, -0.0034545958042144775, 0.14894017577171326, -0.04379335790872574, -0.1594427078962326, -0.2681275010108948, -0.4007140100002289, -0.5406696200370789, 0.10114079713821411, -0.3312358558177948, 0.12824741005897522, -0.038442373275756836, 0.603265643119812, -0.02956610545516014, -0.112773597240448, 0.2821160554885864, 0.22220416367053986, 0.4814437925815582, 0.25899413228034973, -0.014120295643806458, 0.330983430147171, 0.11866866797208786, -0.045325182378292084, -0.813015341758728, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25793>
       [
         [
           [
             [0.018133966252207756, -0.07350335270166397, -0.003444388508796692],
             [-0.06043853983283043, -0.2316831350326538, -0.07205003499984741],
             [-0.040203072130680084, -0.13375863432884216, -0.038213953375816345]
           ],
           [
             [-0.011818412691354752, 0.01510243397206068, -0.001443885383196175],
             [-0.0021789066959172487, 0.03169040009379387, -0.008054575882852077],
             [-0.04167785122990608, 0.004662999417632818, 0.0020967042073607445]
           ],
           [
             [-0.003089394886046648, 0.013769790530204773, 0.00926822330802679],
             [0.009218527004122734, -0.005440209060907364, 0.008369400165975094],
             [0.009553254581987858, 0.007800538558512926, 0.003869730979204178]
           ],
           [
             [0.0227288156747818, -0.047413211315870285, -0.03594115376472473],
             [0.009794779121875763, -0.11392148584127426, -0.05300484225153923],
             [-0.0028923514764755964, -0.07149320095777512, -0.03502916172146797]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_229" => %{
     "bias" => #Nx.Tensor<
       f32[64]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25794>
       [-0.10564234107732773, 0.22684748470783234, -1.1940861940383911, -8.275359869003296e-4, -0.10051688551902771, -0.05861908197402954, -0.31364816427230835, -0.2426064908504486, 0.6775805354118347, 0.38282155990600586, -0.23793041706085205, 0.003867773339152336, -0.1456672102212906, 1.1029140949249268, -0.23198552429676056, 0.07336623966693878, 0.10838691890239716, 0.24838952720165253, -0.23260188102722168, -0.00942269153892994, -0.0333763062953949, -0.1488093137741089, -0.0467180572450161, -0.0579131580889225, -0.23883765935897827, 0.10511204600334167, 0.08279439806938171, 0.19392478466033936, 1.03546142578125, 0.045763105154037476, 0.09651890397071838, 0.19545690715312958, 0.7567149996757507, -0.051735103130340576, 0.6997815370559692, -0.15522512793540955, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[64][64][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25796>
       [
         [
           [
             [-0.024717725813388824, -0.005044959485530853, 0.005508888512849808],
             [-0.00955896731466055, 0.04813782870769501, 0.026578214019536972],
             [-0.010058640502393246, 0.06632795929908752, 0.03455005958676338]
           ],
           [
             [0.06761740148067474, 0.049311649054288864, 0.05179329589009285],
             [0.02540585584938526, -0.01520809531211853, 0.008607038296759129],
             [0.052115943282842636, 0.03529774770140648, 0.04334855079650879]
           ],
           [
             [-0.017714329063892365, -0.044733449816703796, -0.05340082198381424],
             [-0.026576975360512733, 0.032436810433864594, 0.005192308686673641],
             [-0.023413367569446564, 0.015750419348478317, 0.029674092307686806]
           ],
           [
             [0.0017097287345677614, -0.09582443535327911, -0.0530233234167099],
             [-0.05461081862449646, -0.17358173429965973, -0.1223134696483612],
             [9.687748970463872e-4, -0.08574309200048447, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_235" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25797>
       [0.31823113560676575, 0.27634894847869873, 0.6035528182983398, 0.0038163885474205017, 0.3435554802417755, 0.11432260274887085, 0.9732435941696167, 0.23062577843666077, 0.4295177459716797, 0.11998551338911057, 0.03498217463493347, 0.16066303849220276, -0.07308954745531082, 0.184554785490036, 0.15759962797164917, 0.4694630205631256, 0.5526073575019836, 0.11554225534200668, -0.5529605746269226, -0.042418889701366425, 0.3564732074737549, 0.126267671585083, 0.3164384365081787, 0.04377152770757675, 0.04436700418591499, 0.3092052638530731, 0.21258044242858887, -0.04136769101023674, -0.06746447831392288, 0.43941694498062134, 0.33683180809020996, 0.21441985666751862, 0.37753456830978394, 0.13141807913780212, 0.46424949169158936, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25799>
       [
         [
           [
             [-0.00489493552595377, -0.006373214535415173, 0.0018912849482148886],
             [-0.007016011513769627, 0.01715235412120819, 0.030049731954932213],
             [-0.017946597188711166, 0.003600974567234516, 0.008844220079481602]
           ],
           [
             [0.023280298337340355, 0.016402358189225197, 0.005073747131973505],
             [0.002666505752131343, 0.013104724697768688, 0.017990248277783394],
             [0.02321128360927105, 0.02328471653163433, 0.008787683211266994]
           ],
           [
             [0.012596244923770428, -0.014059853740036488, -0.02379346266388893],
             [-0.01286849845200777, -0.01242225244641304, -0.03909900784492493],
             [-0.014290709979832172, -0.004985240288078785, 0.002621615771204233]
           ],
           [
             [0.005017432849854231, 0.002749720588326454, 0.008904374204576015],
             [-0.011784300208091736, 0.0053575169295072556, 0.0038920030929148197],
             [-0.0060623143799602985, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_238" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25800>
       [0.18034924566745758, -5.658864974975586e-4, 0.13368843495845795, -0.22161537408828735, -0.012721884995698929, 0.06799370050430298, -0.2859732508659363, 0.1918514519929886, -0.08921639621257782, 0.16485852003097534, 0.24261310696601868, 0.2795547842979431, 0.3359287679195404, 0.12746943533420563, -0.00460449606180191, 0.19999265670776367, 0.0939091295003891, -0.19205480813980103, -0.07891038060188293, 0.00814848579466343, 0.1274186074733734, -0.020703747868537903, 0.6807518601417542, 0.021746642887592316, 0.039910562336444855, -0.04043282940983772, 0.2373475730419159, 0.18585500121116638, -0.1520090103149414, 0.8075443506240845, 0.07605855911970139, 0.08742907643318176, 0.9486801028251648, 0.2279818058013916, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][64][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25802>
       [
         [
           [
             [0.011903597041964531]
           ],
           [
             [-0.2328016757965088]
           ],
           [
             [0.009285029023885727]
           ],
           [
             [0.006301018409430981]
           ],
           [
             [-0.02098291739821434]
           ],
           [
             [0.025160327553749084]
           ],
           [
             [0.1117885634303093]
           ],
           [
             [0.001049119746312499]
           ],
           [
             [-0.011655530892312527]
           ],
           [
             [0.08893624693155289]
           ],
           [
             [-0.0038891658186912537]
           ],
           [
             [0.008940387517213821]
           ],
           [
             [0.014550555497407913]
           ],
           [
             [0.02698996290564537]
           ],
           [
             [0.04130556061863899]
           ],
           [
             [0.0066432771272957325]
           ],
           [
             [0.09948353469371796]
           ],
           [
             [0.01490853913128376]
           ],
           [
             [-0.11249639838933945]
           ],
           [
             [-0.03714507445693016]
           ],
           [
             [0.005279819946736097]
           ],
           [
             [0.05435054004192352]
           ],
           [
             [0.00281948852352798]
           ],
           [
             [0.12041610479354858]
           ],
           [
             [-0.0034949604887515306]
           ],
           [
             [0.012083775363862514]
           ],
           [
             [0.011243147775530815]
           ],
           [
             [-0.22759008407592773]
           ],
           [
             [0.05258777737617493]
           ],
           [
             [0.021451210603117943]
           ],
           [
             [0.014719353057444096]
           ],
           [
             [0.19309008121490479]
           ],
           [
             [-0.07803221046924591]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_244" => %{
     "bias" => #Nx.Tensor<
       f32[128]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25803>
       [-0.11303133517503738, -0.13007967174053192, -0.456851601600647, -0.07296979427337646, 0.2020764946937561, -0.1676354855298996, 0.03666427731513977, 0.009515352547168732, 0.14876756072044373, -0.06595861911773682, -0.16446980834007263, -0.13889487087726593, -0.0649423897266388, 0.24434730410575867, -0.2025597095489502, -0.2160053551197052, -0.13634899258613586, -0.07036051154136658, -0.1296505331993103, 0.10101187974214554, -0.08120255917310715, -0.10090147703886032, -0.45667383074760437, 0.04249081015586853, -0.4574871361255646, 0.0921243205666542, -0.14230965077877045, 0.045015331357717514, -0.1850130558013916, -0.24664470553398132, 0.0790361613035202, 0.0013913437724113464, -0.15088945627212524, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[128][128][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25805>
       [
         [
           [
             [-0.01389470137655735, 0.004385662265121937, -7.126881391741335e-4],
             [-0.007508276030421257, -0.016735397279262543, -0.02078241854906082],
             [0.005529328249394894, 0.008890612982213497, -0.011846892535686493]
           ],
           [
             [-0.009422501549124718, 0.0022987204138189554, 0.020401649177074432],
             [-0.015276459977030754, 0.01702958345413208, 0.055193860083818436],
             [0.005202550906687975, 0.06590732932090759, 0.0880756825208664]
           ],
           [
             [-0.006906938273459673, 0.005970306228846312, 0.021869512274861336],
             [-0.0069338479079306126, 0.007981129921972752, 0.007040303200483322],
             [0.006754262372851372, 0.010506873950362206, 0.006138052325695753]
           ],
           [
             [0.0023676124401390553, -0.00876015517860651, 0.009962521493434906],
             [0.014848126098513603, -0.003579366486519575, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_250" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25806>
       [0.16263636946678162, 0.41146695613861084, -0.013036046177148819, -0.10138790309429169, 0.2746133804321289, 0.10814163088798523, 0.20043745636940002, 0.23761720955371857, 0.11372671276330948, 0.26353368163108826, 0.048142123967409134, 0.1806715428829193, 0.06960341334342957, 0.29504284262657166, 0.11809640377759933, -0.030906060710549355, 0.2591952085494995, -0.19352127611637115, 0.1862228661775589, 0.1580950915813446, 0.19684778153896332, 0.18259769678115845, 0.1923982948064804, 0.014151453971862793, 0.21093973517417908, 0.03613940626382828, 0.015449412167072296, 0.3896031379699707, 0.48932451009750366, 0.03844817727804184, 0.23387807607650757, 0.19900664687156677, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25808>
       [
         [
           [
             [-0.010632842779159546, -0.0363139808177948, -0.014838095754384995],
             [-0.025737212970852852, -0.07849010825157166, -0.049487024545669556],
             [-0.04408334568142891, -0.07922776788473129, -0.06541725248098373]
           ],
           [
             [-0.027350209653377533, 0.002428631531074643, -0.028036201372742653],
             [0.010128768160939217, 0.011018392629921436, -0.017037294805049896],
             [-0.010784917511045933, 0.0022780944127589464, -0.011838394217193127]
           ],
           [
             [-0.014257246628403664, 0.02145973965525627, 0.004521982744336128],
             [0.015923021361231804, 0.01161304209381342, -0.003662914503365755],
             [-0.019860608503222466, -0.016252940520644188, -0.013839399442076683]
           ],
           [
             [0.04166470095515251, 0.020069291815161705, 0.0012995925499126315],
             [0.0388624481856823, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_253" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25809>
       [0.028903957456350327, 0.14923398196697235, 0.025715893134474754, 0.1262708306312561, 0.03711000457406044, 0.04672859609127045, 0.005846813321113586, 0.19053490459918976, 0.021371707320213318, 0.02655435912311077, 0.05842805281281471, 0.007784640416502953, -0.0018071122467517853, 0.04117465019226074, -0.03646749630570412, 0.014314495027065277, 0.12448717653751373, 0.03748828172683716, -0.060800954699516296, 0.1085808277130127, 0.12062211334705353, -0.06737703830003738, 0.11495926231145859, -0.007424011826515198, -0.010421160608530045, 0.10909464955329895, -0.09660376608371735, -0.10515370219945908, 0.01570696383714676, 0.04558666795492172, 0.028305422514677048, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][128][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25811>
       [
         [
           [
             [0.004732178524136543]
           ],
           [
             [-0.010826525278389454]
           ],
           [
             [-0.00972291361540556]
           ],
           [
             [0.008580264635384083]
           ],
           [
             [-0.022149275988340378]
           ],
           [
             [-0.021081754937767982]
           ],
           [
             [-0.008294394239783287]
           ],
           [
             [0.02070927433669567]
           ],
           [
             [-0.03590099886059761]
           ],
           [
             [0.036099907010793686]
           ],
           [
             [-0.0038990627508610487]
           ],
           [
             [-0.0015074065886437893]
           ],
           [
             [-0.01274938229471445]
           ],
           [
             [-0.0011134434025734663]
           ],
           [
             [-6.194077432155609e-4]
           ],
           [
             [-0.018077963963150978]
           ],
           [
             [0.007210513111203909]
           ],
           [
             [0.0077378167770802975]
           ],
           [
             [-0.01849287375807762]
           ],
           [
             [-0.003760911524295807]
           ],
           [
             [0.005658515263348818]
           ],
           [
             [0.0013087831903249025]
           ],
           [
             [-0.038895342499017715]
           ],
           [
             [0.007853779010474682]
           ],
           [
             [-0.013517971150577068]
           ],
           [
             [-0.020908478647470474]
           ],
           [
             [-0.012710780836641788]
           ],
           [
             [-0.005483848508447409]
           ],
           [
             [-0.014658576808869839]
           ],
           [
             [-0.024989183992147446]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_259" => %{
     "bias" => #Nx.Tensor<
       f32[256]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25812>
       [0.09377417713403702, -0.16699424386024475, 0.07293206453323364, -0.12973688542842865, -0.09543664008378983, 0.04503244906663895, -0.038973450660705566, -0.07914914935827255, -0.1292264610528946, -0.07337316870689392, -0.05144652724266052, -0.13217617571353912, 0.03312744200229645, -0.12137223035097122, -0.10924245417118073, -0.18983016908168793, -0.0959831029176712, 0.09333932399749756, 0.23065221309661865, 0.0214221253991127, -0.10217837989330292, 0.9913166761398315, -0.025805935263633728, 0.11880898475646973, -0.08501829206943512, -0.20581969618797302, 0.20783275365829468, 0.03752484917640686, -0.0221792533993721, 0.3997785449028015, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[256][256][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25814>
       [
         [
           [
             [-0.06128905341029167, -0.03767102584242821, -0.03189960494637489],
             [-0.02558561973273754, -0.01254164706915617, -0.012434340082108974],
             [-0.0019436832517385483, 0.03400717303156853, 0.02130315452814102]
           ],
           [
             [-0.004635471850633621, -0.007590537425130606, -0.006472210865467787],
             [-6.903356406837702e-4, 0.021807491779327393, 0.023693738505244255],
             [0.01827724277973175, 0.04640205204486847, 0.07195030897855759]
           ],
           [
             [-0.0061161108314991, -0.007862861268222332, 0.0026009283028542995],
             [0.02133755385875702, 0.036621786653995514, 0.038110699504613876],
             [0.05778104439377785, 0.07410115748643875, 0.06904900074005127]
           ],
           [
             [0.01092059351503849, 0.016586197540163994, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_265" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25815>
       [0.41031813621520996, 0.33891570568084717, 0.14350324869155884, 0.07778601348400116, 0.07120604813098907, 0.10753029584884644, 0.12668165564537048, 0.29873231053352356, 0.3561055362224579, 0.2568209767341614, 0.2801537811756134, 0.20414629578590393, 0.06745529174804688, 0.24649176001548767, 0.2936386466026306, 0.12383732199668884, 0.31897231936454773, 0.3690835237503052, 0.19288179278373718, 0.18046556413173676, 0.25156721472740173, 0.2325526922941208, 0.24055176973342896, 0.08486039936542511, 0.27891093492507935, 0.34825456142425537, 0.29254794120788574, 0.18113252520561218, 0.12604591250419617, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25817>
       [
         [
           [
             [0.0024751487653702497, -0.034085340797901154, -0.03835613280534744],
             [-0.02956099808216095, -0.07599762082099915, -0.0804230123758316],
             [0.06862904876470566, 0.04243409261107445, -0.04399258643388748]
           ],
           [
             [0.02634502947330475, 0.0751102939248085, 0.05894612893462181],
             [-0.02407737821340561, -0.06078255549073219, -0.02126508206129074],
             [-0.020679164677858353, -0.016783995553851128, -0.06970132142305374]
           ],
           [
             [-0.021840833127498627, -0.07074422389268875, 0.010523536242544651],
             [-0.030584920197725296, -0.024858573451638222, 0.012052692472934723],
             [-0.001675385981798172, 0.02088983729481697, 0.014584148302674294]
           ],
           [
             [-0.014353886246681213, ...],
             ...
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_268" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25818>
       [-0.04742951691150665, -0.01686421036720276, -0.25404390692710876, -0.2854520380496979, -0.25164780020713806, -0.036855556070804596, 0.08410137891769409, -0.05769416689872742, -0.18498846888542175, -0.03686590492725372, -0.025324121117591858, -0.14799685776233673, -0.2658706605434418, 0.0496743880212307, -0.09760992228984833, -0.0155458003282547, -0.14772361516952515, 0.3469434380531311, -7.482320070266724e-4, -0.0927184447646141, -0.16172392666339874, 0.14168091118335724, -0.21372295916080475, -0.05334959924221039, -0.2903295159339905, -0.2302875965833664, 0.13425612449645996, 0.02347281575202942, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][256][1][1]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25820>
       [
         [
           [
             [0.008734465576708317]
           ],
           [
             [1.260630670003593e-4]
           ],
           [
             [0.021078413352370262]
           ],
           [
             [0.005081498064100742]
           ],
           [
             [0.011961364187300205]
           ],
           [
             [-0.01247117668390274]
           ],
           [
             [0.0013897938188165426]
           ],
           [
             [-0.06576383858919144]
           ],
           [
             [-0.01592460833489895]
           ],
           [
             [-0.06542298197746277]
           ],
           [
             [0.011016684584319592]
           ],
           [
             [-0.032227497547864914]
           ],
           [
             [0.025111552327871323]
           ],
           [
             [-0.010344806127250195]
           ],
           [
             [3.030621155630797e-4]
           ],
           [
             [-0.06530050933361053]
           ],
           [
             [0.07595432549715042]
           ],
           [
             [0.017762266099452972]
           ],
           [
             [-0.02203328162431717]
           ],
           [
             [0.03922390565276146]
           ],
           [
             [0.038076043128967285]
           ],
           [
             [-0.0023830230347812176]
           ],
           [
             [-0.03955771028995514]
           ],
           [
             [0.047160398215055466]
           ],
           [
             [0.019408337771892548]
           ],
           [
             [0.029593806713819504]
           ],
           [
             [0.004358192440122366]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "onnx::Add_274" => %{
     "bias" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25821>
       [-0.044551268219947815, 0.6531970500946045, 0.7115403413772583, 0.7224211692810059, 0.7231326699256897, 0.735939621925354, 0.03697866201400757, 0.2942344546318054, 0.27344030141830444, 0.5656091570854187, 0.6473287343978882, 0.49111002683639526, 0.7273029685020447, 0.028963789343833923, 0.5758552551269531, 1.1020814180374146, 0.2407553344964981, 2.097511053085327, 0.026813745498657227, 0.94841468334198, 0.02811834216117859, 1.1966273784637451, 0.3122836649417877, 0.7918332815170288, -0.24210304021835327, 0.4797571897506714, 0.48157840967178345, ...]
     >,
     "kernel" => #Nx.Tensor<
       f32[512][512][3][3]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25823>
       [
         [
           [
             [0.0015872081276029348, 0.06417305767536163, -0.032195378094911575],
             [-0.004664787091314793, 0.04206933081150055, -0.07415852695703506],
             [0.05711071938276291, 0.11900594830513, 0.01189915370196104]
           ],
           [
             [-0.12256816774606705, -0.13417966663837433, -0.11693727970123291],
             [-0.034808218479156494, -0.025902267545461655, -0.012859195470809937],
             [-0.06757167726755142, -0.09083666652441025, -0.09261424839496613]
           ],
           [
             [-0.14517639577388763, -0.13984498381614685, -0.12556324899196625],
             [-0.14354616403579712, -0.12954097986221313, -0.09490184485912323],
             [-0.1312723159790039, -0.09818514436483383, ...]
           ],
           ...
         ],
         ...
       ]
     >
   },
   "output1" => %{
     "kernel" => #Nx.Tensor<
       f32[512][2]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25825>
       [
         [0.005254666320979595, 0.15100258588790894],
         [-0.011043878272175789, -0.03457579016685486],
         [-0.007923453114926815, -0.0030333457980304956],
         [-0.03243527561426163, -0.008831282146275043],
         [-0.006293038837611675, -0.040399596095085144],
         [-0.04043736681342125, 0.053120654076337814],
         [0.06861234456300735, -0.002412833273410797],
         [-0.025858119130134583, 0.06279060244560242],
         [-0.043891314417123795, 0.002001610118895769],
         [0.03356955200433731, -0.02658887766301632],
         [0.08823095262050629, -0.06618508696556091],
         [0.0492500402033329, 0.034142494201660156],
         [0.02671916037797928, 0.0458889938890934],
         ...
       ]
     >
   },
   "ret" => %{
     "beta" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25826>
       [0.019600875675678253, 0.025821072980761528, -6.489195948233828e-5, 0.003589334199205041, 0.0031338955741375685, 0.013610259629786015, 0.007155769970268011, 0.02346169576048851, -0.006090241950005293, -0.010363097302615643, -0.041258905082941055, -0.008500073105096817, 0.01839730329811573, 0.0055549670942127705, -0.022942638024687767, -0.01202760636806488, 0.014973812736570835, -0.00730720441788435, 0.007979560643434525, 0.011952590197324753, -0.009555859491229057, 0.01753874495625496, 0.024672336876392365, -0.0015246381517499685, 0.02414730004966259, ...]
     >,
     "gamma" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25827>
       [1.0186330080032349, 0.996698260307312, 0.9812076687812805, 0.9914823174476624, 1.0059401988983154, 1.0011167526245117, 0.9952116012573242, 0.9976027607917786, 0.9926190376281738, 1.0029269456863403, 1.0111398696899414, 0.9863574504852295, 1.0119359493255615, 0.9947774410247803, 1.0145542621612549, 1.0128952264785767, 0.9740985035896301, 1.003001093864441, 0.984277069568634, 0.982774555683136, 0.9862943291664124, 1.0078012943267822, 0.9934849143028259, 1.0127661228179932, ...]
     >,
     "mean" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25828>
       [3.4188473224639893, 3.270092248916626, 3.307494878768921, 3.1980302333831787, 3.049362897872925, 2.976794719696045, 3.529273509979248, 4.117916107177734, 2.8261539936065674, 3.120123863220215, 2.8672266006469727, 2.886274814605713, 2.8638734817504883, 3.404776096343994, 2.999854326248169, 3.0485033988952637, 3.603266477584839, 3.9547922611236572, 3.4595134258270264, 2.7913570404052734, 3.149024486541748, 3.4817986488342285, 3.5285041332244873, ...]
     >,
     "var" => #Nx.Tensor<
       f32[1024]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25829>
       [8.221498489379883, 5.197445869445801, 3.9460668563842773, 3.921175241470337, 8.296836853027344, 5.218442440032959, 6.61596155166626, 8.298115730285645, 2.515230655670166, 7.442317962646484, 5.561676025390625, 4.186655521392822, 6.3376545906066895, 3.7835898399353027, 7.333268165588379, 5.546231269836426, 4.657751560211182, 7.373143672943115, 5.236988067626953, 6.785642623901367, 4.639777183532715, 5.802654266357422, ...]
     >
   },
   "ret.3" => %{
     "kernel" => #Nx.Tensor<
       f32[1024][512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25831>
       [
         [0.09833378344774246, 0.02224254608154297, -0.0530877448618412, 0.02074247971177101, -0.05336613953113556, -0.05032508075237274, 0.014588700607419014, -0.05299871042370796, -0.05850294977426529, 0.016324948519468307, 0.0023102012928575277, 0.02088942378759384, -0.022296952083706856, -0.04155405983328819, 0.008024103939533234, 0.00273123593069613, -0.022583523765206337, 0.0627654418349266, -0.015062553808093071, -0.01996546983718872, -0.018407359719276428, -0.03356808423995972, 0.11431518942117691, -0.08084410429000854, ...],
         ...
       ]
     >
   },
   "ret.7" => %{
     "beta" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25832>
       [-0.041753217577934265, 0.05196209251880646, 0.0149048687890172, -0.03937583044171333, 0.044436682015657425, -0.03457950800657272, 0.04115293174982071, -0.041577283293008804, -0.03190606087446213, 0.05073971673846245, 0.039692290127277374, 0.038357656449079514, -0.029945427551865578, 0.0428413525223732, 0.0401594303548336, -0.0444255955517292, 0.042825814336538315, 0.03909890726208687, -0.03784821182489395, 0.04197309911251068, -0.04786713421344757, -0.029538413509726524, 0.04163031280040741, ...]
     >,
     "gamma" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25833>
       [1.0119315385818481, 0.9962266087532043, 0.9835289716720581, 0.9908992648124695, 0.9829221963882446, 0.9946608543395996, 1.0224061012268066, 0.9874153137207031, 0.9862425923347473, 0.9803566932678223, 1.0008001327514648, 0.9818745255470276, 1.0011365413665771, 0.9782065153121948, 0.9798407554626465, 0.9966987371444702, 1.007981777191162, 0.9703671932220459, 0.9764832258224487, 0.9880099296569824, 1.0063624382019043, 0.9865400791168213, ...]
     >,
     "mean" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25834>
       [1.761946439743042, 1.0505415201187134, 0.6971639394760132, 1.081170916557312, 1.0411185026168823, 1.2960827350616455, 0.9751063585281372, 1.6580326557159424, 1.3859546184539795, 1.0124022960662842, 1.1038469076156616, 0.8805375099182129, 1.185096263885498, 0.9167401790618896, 0.8892937302589417, 1.8594248294830322, 1.1572118997573853, 1.0641213655471802, 1.1005784273147583, 1.001948595046997, 0.9049599170684814, ...]
     >,
     "var" => #Nx.Tensor<
       f32[512]
       EXLA.Backend<cuda:0, 0.2397011257.1758330905.25835>
       [7.317668914794922, 3.0408143997192383, 1.0820187330245972, 3.0113775730133057, 2.710907220840454, 4.431440830230713, 2.607041120529175, 7.468499183654785, 5.365750312805176, 2.5836546421051025, 2.701380729675293, 1.663992166519165, 3.3480031490325928, 1.6480833292007446, 1.9680217504501343, 8.916132926940918, 3.3481805324554443, 2.572866439819336, 2.5147602558135986, 1.6796602010726929, ...]
     >
   }
 }}
```

```elixir
# |> Nx.to_flat_list()
list = Axon.predict(cats_v_dogs_model, cats_v_dogs_params, img_tensors)
# Enum.zip([list, objects])
```

<!-- livebook:{"output":true} -->

```
warning: variable "img_tensors" does not exist and is being expanded to "img_tensors()", please use parentheses to remove the ambiguity or change the variable name
  axon_livebooks/onnx_to_axon.livemd#cell:1

```

```elixir
# # File.read!("data/oxford-iiit-pet/images/havanese_71.jpg")
# filename = "data/oxford-iiit-pet/images/havanese_71.jpg"
# # shape = 
# {:ok, %StbImage{data: binary, shape: shape, type: _type}} = StbImage.read_file(filename)

#     tensor =
#       binary
#       |> Nx.from_binary({:u, 8})
#       # |> Nx.reshape({224,224})
#       |> Nx.shape()
# #       |> Nx.reshape(shape)
# #       |> Nx.divide(255.0)

# # # {cats_v_dogs_model, cats_v_dogs_params} = Axon.deserialize(cats_v_dogs)
# # Axon.predict(cats_v_dogs_model, cats_v_dogs_params, tensor)
```
